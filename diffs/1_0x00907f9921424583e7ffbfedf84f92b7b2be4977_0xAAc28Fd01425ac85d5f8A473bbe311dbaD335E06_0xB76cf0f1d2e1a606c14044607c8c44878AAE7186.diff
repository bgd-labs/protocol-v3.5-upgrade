diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/AToken.sol b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/AToken.sol
index f5e5fd0..c98ba96 100644
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/AToken.sol
+++ b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/AToken.sol
@@ -8,7 +8,6 @@ import {IERC20} from "../../dependencies/openzeppelin/contracts/IERC20.sol";
 import {GPv2SafeERC20} from "../../dependencies/gnosis/contracts/GPv2SafeERC20.sol";
 import {VersionedInitializable} from "../../misc/aave-upgradeability/VersionedInitializable.sol";
 import {Errors} from "../libraries/helpers/Errors.sol";
-import {WadRayMath} from "../libraries/math/WadRayMath.sol";
 import {IPool} from "../../interfaces/IPool.sol";
 import {IAToken} from "../../interfaces/IAToken.sol";
 import {IAaveIncentivesController} from "../../interfaces/IAaveIncentivesController.sol";
@@ -16,6 +15,7 @@ import {IInitializableAToken} from "../../interfaces/IInitializableAToken.sol";
 import {ScaledBalanceTokenBase} from "./base/ScaledBalanceTokenBase.sol";
 import {IncentivizedERC20} from "./base/IncentivizedERC20.sol";
 import {EIP712Base} from "./base/EIP712Base.sol";
+import {TokenMath} from "../libraries/helpers/TokenMath.sol";
 
 /**
  * @title Aave ERC20 AToken
@@ -23,7 +23,7 @@ import {EIP712Base} from "./base/EIP712Base.sol";
  * @notice Implementation of the interest bearing token for the Aave protocol
  */
 abstract contract AToken is VersionedInitializable, ScaledBalanceTokenBase, EIP712Base, IAToken {
-  using WadRayMath for uint256;
+  using TokenMath for uint256;
   using SafeCast for uint256;
   using GPv2SafeERC20 for IERC20;
 
@@ -60,61 +60,76 @@ abstract contract AToken is VersionedInitializable, ScaledBalanceTokenBase, EIP7
   ) public virtual;
 
   /// @inheritdoc IAToken
-  function mint(address caller, address onBehalfOf, uint256 amount, uint256 index)
+  function mint(address caller, address onBehalfOf, uint256 scaledAmount, uint256 index)
     external
     virtual
     override
     onlyPool
     returns (bool)
   {
-    return _mintScaled(caller, onBehalfOf, amount, index);
+    return _mintScaled({
+      caller: caller,
+      onBehalfOf: onBehalfOf,
+      amountScaled: scaledAmount,
+      index: index,
+      getTokenBalance: TokenMath.getATokenBalance
+    });
   }
 
   /// @inheritdoc IAToken
-  function burn(address from, address receiverOfUnderlying, uint256 amount, uint256 index)
+  function burn(address from, address receiverOfUnderlying, uint256 amount, uint256 scaledAmount, uint256 index)
     external
     virtual
     override
     onlyPool
+    returns (bool)
   {
-    _burnScaled(from, receiverOfUnderlying, amount, index);
+    bool zeroBalanceAfterBurn = _burnScaled({
+      user: from,
+      target: receiverOfUnderlying,
+      amountScaled: scaledAmount,
+      index: index,
+      getTokenBalance: TokenMath.getATokenBalance
+    });
+
     if (receiverOfUnderlying != address(this)) {
       IERC20(_underlyingAsset).safeTransfer(receiverOfUnderlying, amount);
     }
+    return zeroBalanceAfterBurn;
   }
 
   /// @inheritdoc IAToken
-  function mintToTreasury(uint256 amount, uint256 index) external virtual override onlyPool {
-    if (amount == 0) {
+  function mintToTreasury(uint256 scaledAmount, uint256 index) external virtual override onlyPool {
+    if (scaledAmount == 0) {
       return;
     }
-    _mintScaled(address(POOL), TREASURY, amount, index);
+    _mintScaled({
+      caller: address(POOL),
+      onBehalfOf: TREASURY,
+      amountScaled: scaledAmount,
+      index: index,
+      getTokenBalance: TokenMath.getATokenBalance
+    });
   }
 
   /// @inheritdoc IAToken
-  function transferOnLiquidation(address from, address to, uint256 amount, uint256 index)
+  function transferOnLiquidation(address from, address to, uint256 amount, uint256 scaledAmount, uint256 index)
     external
     virtual
     override
     onlyPool
   {
-    _transfer(from, to, amount, index);
+    _transfer({sender: from, recipient: to, amount: amount, scaledAmount: scaledAmount.toUint120(), index: index});
   }
 
   /// @inheritdoc IERC20
   function balanceOf(address user) public view virtual override(IncentivizedERC20, IERC20) returns (uint256) {
-    return super.balanceOf(user).rayMul(POOL.getReserveNormalizedIncome(_underlyingAsset));
+    return super.balanceOf(user).getATokenBalance(POOL.getReserveNormalizedIncome(_underlyingAsset));
   }
 
   /// @inheritdoc IERC20
   function totalSupply() public view virtual override(IncentivizedERC20, IERC20) returns (uint256) {
-    uint256 currentSupplyScaled = super.totalSupply();
-
-    if (currentSupplyScaled == 0) {
-      return 0;
-    }
-
-    return currentSupplyScaled.rayMul(POOL.getReserveNormalizedIncome(_underlyingAsset));
+    return super.totalSupply().getATokenBalance(POOL.getReserveNormalizedIncome(_underlyingAsset));
   }
 
   /// @inheritdoc IAToken
@@ -153,6 +168,57 @@ abstract contract AToken is VersionedInitializable, ScaledBalanceTokenBase, EIP7
     _approve(owner, spender, value);
   }
 
+  /// @inheritdoc IERC20
+  function transferFrom(address sender, address recipient, uint256 amount)
+    external
+    virtual
+    override(IERC20, IncentivizedERC20)
+    returns (bool)
+  {
+    uint256 index = POOL.getReserveNormalizedIncome(_underlyingAsset);
+    uint256 scaledBalanceOfSender = super.balanceOf(sender);
+    _spendAllowance(
+      sender,
+      _msgSender(),
+      amount,
+      // This comment explains the logic behind the allowance spent calculation.
+      //
+      // Problem:
+      // Simply decreasing the allowance by the input `amount` is not ideal for scaled-balance tokens.
+      // Due to rounding, the actual decrease in the sender's balance (`amount_out`) can be slightly
+      // larger than the input `amount`.
+      //
+      // Definitions:
+      // - `amount`: The unscaled amount to be transferred, passed as the `amount` argument.
+      // - `amount_out`: The actual unscaled amount deducted from the sender's balance.
+      // - `amount_in`: The actual unscaled amount added to the recipient's balance.
+      // - `allowance_spent`: The unscaled amount deducted from the spender's allowance. Equivalent to `amount_out`.
+      // - `amount_logged`: The amount logged in the `Transfer` event. Equivalent to `amount`.
+      //
+      // Solution:
+      // To fix this, `allowance_spent` must be exactly equal to `amount_out`.
+      // We calculate `amount_out` precisely by simulating the effect of the transfer on the sender's balance.
+      // By passing `amount_out` to `_spendAllowance`, we ensure `allowance_spent` is as close as possible to `amount_out`.
+      // `amount_logged` is equal to `amount`. `amount_in` is the actual balance increase for the recipient, which is >= `amount` due to rounding.
+      //
+      // Backward Compatibility & Guarantees:
+      // This implementation is backward-compatible and secure. The `_spendAllowance` function has a critical feature:
+      // 1. It REQUIRES the allowance to be >= `amount` (the user's requested transfer amount).
+      // 2. The amount consumed from the allowance is `amount_out`, but it is capped at the `currentAllowance`.
+      // This means if a user has an allowance of 100 wei and calls `transferFrom` with an `amount` of 100, the call will succeed
+      // even if the calculated `amount_out` is 101 wei. In that specific scenario, the allowance consumed will be 100 wei (since that is the `currentAllowance`),
+      // and the transaction will not revert. But if the allowance is 101 wei, then the allowance consumed will be 101 wei.
+      //
+      // uint256 amount_in = amount.getATokenTransferScaledAmount(index);
+      // uint256 amount_out = balanceBefore - balanceAfter = scaledBalanceOfSender.getATokenBalance(index) - (scaledBalanceOfSender - amount_in).getATokenBalance(index);
+      // Due to limitations of the solidity compiler, the calculation is inlined for gas efficiency.
+      scaledBalanceOfSender.getATokenBalance(index)
+        - (scaledBalanceOfSender - amount.getATokenTransferScaledAmount(index)).getATokenBalance(index)
+    );
+    _transfer(sender, recipient, amount.toUint120());
+    return true;
+  }
+
   /**
    * @notice Overrides the parent _transfer to force validated transfer() and transferFrom()
    * @param from The source address
@@ -164,12 +230,20 @@ abstract contract AToken is VersionedInitializable, ScaledBalanceTokenBase, EIP7
 
     uint256 index = POOL.getReserveNormalizedIncome(underlyingAsset);
 
-    uint256 fromBalanceBefore = super.balanceOf(from).rayMul(index);
-    uint256 toBalanceBefore = super.balanceOf(to).rayMul(index);
+    uint256 scaledBalanceFromBefore = super.balanceOf(from);
+    uint256 scaledBalanceToBefore = super.balanceOf(to);
+    uint256 scaledAmount = uint256(amount).getATokenTransferScaledAmount(index);
 
-    _transfer(from, to, amount, index);
+    _transfer({sender: from, recipient: to, amount: amount, scaledAmount: scaledAmount.toUint120(), index: index});
 
-    POOL.finalizeTransfer(underlyingAsset, from, to, amount, fromBalanceBefore, toBalanceBefore);
+    POOL.finalizeTransfer({
+      asset: underlyingAsset,
+      from: from,
+      to: to,
+      scaledAmount: scaledAmount,
+      scaledBalanceFromBefore: scaledBalanceFromBefore,
+      scaledBalanceToBefore: scaledBalanceToBefore
+    });
   }
 
   /**
@@ -178,20 +252,23 @@ abstract contract AToken is VersionedInitializable, ScaledBalanceTokenBase, EIP7
    * @param sender The source address
    * @param recipient The destination address
    * @param amount The amount getting transferred
+   * @param scaledAmount The scaled amount getting transferred
    * @param index The next liquidity index of the reserve
    */
-  function _transfer(address sender, address recipient, uint256 amount, uint256 index) internal virtual {
+  function _transfer(address sender, address recipient, uint256 amount, uint120 scaledAmount, uint256 index)
+    internal
+    virtual
+  {
     uint256 senderScaledBalance = super.balanceOf(sender);
-    uint256 senderBalanceIncrease =
-      senderScaledBalance.rayMul(index) - senderScaledBalance.rayMul(_userState[sender].additionalData);
+    uint256 senderBalanceIncrease = senderScaledBalance.getATokenBalance(index)
+      - senderScaledBalance.getATokenBalance(_userState[sender].additionalData);
 
     uint256 recipientScaledBalance = super.balanceOf(recipient);
-    uint256 recipientBalanceIncrease =
-      recipientScaledBalance.rayMul(index) - recipientScaledBalance.rayMul(_userState[recipient].additionalData);
+    uint256 recipientBalanceIncrease = recipientScaledBalance.getATokenBalance(index)
+      - recipientScaledBalance.getATokenBalance(_userState[recipient].additionalData);
 
     _userState[sender].additionalData = index.toUint128();
     _userState[recipient].additionalData = index.toUint128();
-    uint120 scaledAmount = amount.rayDiv(index).toUint120();
 
     super._transfer(sender, recipient, scaledAmount);
 
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ATokenInstance.sol b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/ATokenInstance.sol
index 4f540a8..1234c5e 100644
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ATokenInstance.sol
+++ b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/ATokenInstance.sol
@@ -16,7 +16,7 @@ import {AToken} from "../protocol/tokenization/AToken.sol";
  * @notice Instance of the interest bearing token for the Aave protocol
  */
 contract ATokenInstance is AToken {
-  uint256 public constant ATOKEN_REVISION = 3;
+  uint256 public constant ATOKEN_REVISION = 4;
 
   constructor(IPool pool, address rewardsController, address treasury) AToken(pool, rewardsController, treasury) {}
 
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ATokenMainnetInstanceGHO.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ATokenMainnetInstanceGHO.sol
deleted file mode 100644
index 7f99566..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ATokenMainnetInstanceGHO.sol
+++ /dev/null
@@ -1,72 +0,0 @@
-// SPDX-License-Identifier: BUSL-1.1
-pragma solidity ^0.8.0;
-
-import {IPool} from "aave-v3-origin/contracts/interfaces/IPool.sol";
-import {ATokenInstance, IInitializableAToken, Errors} from "aave-v3-origin/contracts/instances/ATokenInstance.sol";
-
-import {AaveV3EthereumAssets} from "aave-address-book/AaveV3Ethereum.sol";
-
-import {IGhoToken} from "gho-direct-minter/interfaces/IGhoToken.sol";
-
-import {IATokenMainnetInstanceGHO} from "./interfaces/IATokenMainnetInstanceGHO.sol";
-
-contract ATokenMainnetInstanceGHO is ATokenInstance, IATokenMainnetInstanceGHO {
-  // These are additional storage variables that were present in the v3.3 AToken implementation specific to the GHO aToken.
-  // However, such variables do not exist in other AToken implementations (for other assets) in either v3.3 or v3.4.
-  // Therefore, these slots need to be cleaned (zeroed out) in case future AToken versions
-  // require the addition of new storage variables at these specific slots.
-  // If these slots are not cleaned, the GHO AToken contract would retain non-zero values
-  // at these storage locations, potentially conflicting with new variables introduced in future standard AToken upgrades.
-  address private _deprecated_ghoVariableDebtToken;
-  address private _deprecated_ghoTreasury;
-
-  constructor(IPool pool, address rewardsController, address treasury)
-    ATokenInstance(pool, rewardsController, treasury)
-  {}
-
-  /// @inheritdoc IInitializableAToken
-  function initialize(
-    IPool initializingPool,
-    address underlyingAsset,
-    uint8 aTokenDecimals,
-    string calldata aTokenName,
-    string calldata aTokenSymbol,
-    bytes calldata params
-  ) public virtual override initializer {
-    // @note This is the standard initialization function,
-    //       similar to `ATokenInstance.initialize`,
-    //       but it includes additional logic to delete the deprecated storage variables specific to the old GHO AToken.
-
-    delete _deprecated_ghoVariableDebtToken;
-    delete _deprecated_ghoTreasury;
-
-    require(initializingPool == POOL, Errors.PoolAddressesDoNotMatch());
-    _setName(aTokenName);
-    _setSymbol(aTokenSymbol);
-    _setDecimals(aTokenDecimals);
-
-    _underlyingAsset = underlyingAsset;
-
-    _domainSeparator = _calculateDomainSeparator();
-
-    emit Initialized(
-      underlyingAsset,
-      address(POOL),
-      address(TREASURY),
-      address(REWARDS_CONTROLLER),
-      aTokenDecimals,
-      aTokenName,
-      aTokenSymbol,
-      params
-    );
-  }
-
-  /// @inheritdoc IATokenMainnetInstanceGHO
-  function resolveFacilitator(uint256 amount) external override onlyPoolAdmin {
-    // @note This action is necessary to remove this AToken contract from the GHO facilitator list.
-    //       To achieve this, a facilitator must have its bucket level reduced to 0.
-    //       The facilitator bucket (both capacity and level) previously associated with this AToken
-    //       will be effectively transferred to a new `GhoDirectMinter` contract (which becomes the new facilitator).
-    IGhoToken(AaveV3EthereumAssets.GHO_UNDERLYING).burn(amount);
-  }
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/AaveV3.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/AaveV3.sol
deleted file mode 100644
index 6d440d1..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/AaveV3.sol
+++ /dev/null
@@ -1,33 +0,0 @@
-// SPDX-License-Identifier: MIT
-pragma solidity >=0.6.0;
-
-import {DataTypes} from "aave-v3-origin/contracts/protocol/libraries/types/DataTypes.sol";
-import {Errors} from "aave-v3-origin/contracts/protocol/libraries/helpers/Errors.sol";
-import {ConfiguratorInputTypes} from "aave-v3-origin/contracts/protocol/libraries/types/ConfiguratorInputTypes.sol";
-import {IPoolAddressesProvider} from "aave-v3-origin/contracts/interfaces/IPoolAddressesProvider.sol";
-import {IAToken} from "aave-v3-origin/contracts/interfaces/IAToken.sol";
-import {IPool} from "aave-v3-origin/contracts/interfaces/IPool.sol";
-import {IPoolConfigurator} from "aave-v3-origin/contracts/interfaces/IPoolConfigurator.sol";
-import {IPriceOracleGetter} from "aave-v3-origin/contracts/interfaces/IPriceOracleGetter.sol";
-import {IAaveOracle} from "aave-v3-origin/contracts/interfaces/IAaveOracle.sol";
-import {IACLManager as BasicIACLManager} from "aave-v3-origin/contracts/interfaces/IACLManager.sol";
-import {IPoolDataProvider} from "aave-v3-origin/contracts/interfaces/IPoolDataProvider.sol";
-import {IDefaultInterestRateStrategyV2} from "aave-v3-origin/contracts/interfaces/IDefaultInterestRateStrategyV2.sol";
-import {IReserveInterestRateStrategy} from "aave-v3-origin/contracts/interfaces/IReserveInterestRateStrategy.sol";
-import {IPoolDataProvider as IAaveProtocolDataProvider} from "aave-v3-origin/contracts/interfaces/IPoolDataProvider.sol";
-import {AggregatorInterface} from "aave-v3-origin/contracts/dependencies/chainlink/AggregatorInterface.sol";
-import {ICollector} from "aave-v3-origin/contracts/treasury/ICollector.sol";
-
-interface IACLManager is BasicIACLManager {
-  function hasRole(bytes32 role, address account) external view returns (bool);
-
-  function DEFAULT_ADMIN_ROLE() external pure returns (bytes32);
-
-  function renounceRole(bytes32 role, address account) external;
-
-  function getRoleAdmin(bytes32 role) external view returns (bytes32);
-
-  function grantRole(bytes32 role, address account) external;
-
-  function revokeRole(bytes32 role, address account) external;
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/AaveV3Ethereum.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/AaveV3Ethereum.sol
deleted file mode 100644
index 73cc0ec..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/AaveV3Ethereum.sol
+++ /dev/null
@@ -1,1099 +0,0 @@
-// AUTOGENERATED - MANUALLY CHANGES WILL BE REVERTED BY THE GENERATOR
-// SPDX-License-Identifier: MIT
-pragma solidity >=0.6.0;
-
-import {
-  IPoolAddressesProvider,
-  IPool,
-  IPoolConfigurator,
-  IAaveOracle,
-  IPoolDataProvider,
-  IACLManager,
-  ICollector
-} from "./AaveV3.sol";
-
-library AaveV3Ethereum {
-  // https://etherscan.io/address/0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e
-  IPoolAddressesProvider internal constant POOL_ADDRESSES_PROVIDER =
-    IPoolAddressesProvider(0x2f39d218133AFaB8F2B819B1066c7E434Ad94E9e);
-
-  // https://etherscan.io/address/0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2
-  IPool internal constant POOL = IPool(0x87870Bca3F3fD6335C3F4ce8392D69350B4fA4E2);
-
-  // https://etherscan.io/address/0x64b761D848206f447Fe2dd461b0c635Ec39EbB27
-  IPoolConfigurator internal constant POOL_CONFIGURATOR = IPoolConfigurator(0x64b761D848206f447Fe2dd461b0c635Ec39EbB27);
-
-  // https://etherscan.io/address/0x54586bE62E3c3580375aE3723C145253060Ca0C2
-  IAaveOracle internal constant ORACLE = IAaveOracle(0x54586bE62E3c3580375aE3723C145253060Ca0C2);
-
-  // https://etherscan.io/address/0x5300A1a15135EA4dc7aD5a167152C01EFc9b192A
-  address internal constant ACL_ADMIN = 0x5300A1a15135EA4dc7aD5a167152C01EFc9b192A;
-
-  // https://etherscan.io/address/0xc2aaCf6553D20d1e9d78E365AAba8032af9c85b0
-  IACLManager internal constant ACL_MANAGER = IACLManager(0xc2aaCf6553D20d1e9d78E365AAba8032af9c85b0);
-
-  // https://etherscan.io/address/0x497a1994c46d4f6C864904A9f1fac6328Cb7C8a6
-  IPoolDataProvider internal constant AAVE_PROTOCOL_DATA_PROVIDER =
-    IPoolDataProvider(0x497a1994c46d4f6C864904A9f1fac6328Cb7C8a6);
-
-  // https://etherscan.io/address/0x9aEb8aAA1cA38634Aa8C0c8933E7fB4D61091327
-  address internal constant POOL_IMPL = 0x9aEb8aAA1cA38634Aa8C0c8933E7fB4D61091327;
-
-  // https://etherscan.io/address/0xE5e48Ad1F9D1A894188b483DcF91f4FaD6AbA43b
-  address internal constant POOL_CONFIGURATOR_IMPL = 0xE5e48Ad1F9D1A894188b483DcF91f4FaD6AbA43b;
-
-  // https://etherscan.io/address/0x8164Cc65827dcFe994AB23944CBC90e0aa80bFcb
-  address internal constant DEFAULT_INCENTIVES_CONTROLLER = 0x8164Cc65827dcFe994AB23944CBC90e0aa80bFcb;
-
-  // https://etherscan.io/address/0x223d844fc4B006D67c0cDbd39371A9F73f69d974
-  address internal constant EMISSION_MANAGER = 0x223d844fc4B006D67c0cDbd39371A9F73f69d974;
-
-  // https://etherscan.io/address/0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c
-  ICollector internal constant COLLECTOR = ICollector(0x464C71f6c2F760DdA6093dCB91C24c39e5d6e18c);
-
-  // https://etherscan.io/address/0x7EfFD7b47Bfd17e52fB7559d3f924201b9DbfF3d
-  address internal constant DEFAULT_A_TOKEN_IMPL_REV_1 = 0x7EfFD7b47Bfd17e52fB7559d3f924201b9DbfF3d;
-
-  // https://etherscan.io/address/0xaC725CB59D16C81061BDeA61041a8A5e73DA9EC6
-  address internal constant DEFAULT_VARIABLE_DEBT_TOKEN_IMPL_REV_1 = 0xaC725CB59D16C81061BDeA61041a8A5e73DA9EC6;
-
-  // https://etherscan.io/address/0x82dcCF206Ae2Ab46E2099e663F70DeE77caE7778
-  address internal constant CAPS_PLUS_RISK_STEWARD = 0x82dcCF206Ae2Ab46E2099e663F70DeE77caE7778;
-
-  // https://etherscan.io/address/0x46Ab47bA01EF627ce47F2ED61C9482794a6109c4
-  address internal constant RISK_STEWARD = 0x46Ab47bA01EF627ce47F2ED61C9482794a6109c4;
-
-  // https://etherscan.io/address/0x2eE68ACb6A1319de1b49DC139894644E424fefD6
-  address internal constant FREEZING_STEWARD = 0x2eE68ACb6A1319de1b49DC139894644E424fefD6;
-
-  // https://etherscan.io/address/0xd7852E139a7097E119623de0751AE53a61efb442
-  address internal constant DEBT_SWAP_ADAPTER = 0xd7852E139a7097E119623de0751AE53a61efb442;
-
-  // https://etherscan.io/address/0x21714092D90c7265F52fdfDae068EC11a23C6248
-  address internal constant DELEGATION_AWARE_A_TOKEN_IMPL_REV_1 = 0x21714092D90c7265F52fdfDae068EC11a23C6248;
-
-  // https://etherscan.io/address/0xA8e351C7Ab1b75A2134A418701919c462932DF79
-  address internal constant CONFIG_ENGINE = 0xA8e351C7Ab1b75A2134A418701919c462932DF79;
-
-  // https://etherscan.io/address/0xbaA999AC55EAce41CcAE355c77809e68Bb345170
-  address internal constant POOL_ADDRESSES_PROVIDER_REGISTRY = 0xbaA999AC55EAce41CcAE355c77809e68Bb345170;
-
-  // https://etherscan.io/address/0x35bb522b102326ea3F1141661dF4626C87000e3E
-  address internal constant REPAY_WITH_COLLATERAL_ADAPTER = 0x35bb522b102326ea3F1141661dF4626C87000e3E;
-
-  // https://etherscan.io/address/0x411D79b8cC43384FDE66CaBf9b6a17180c842511
-  address internal constant LEGACY_STATIC_A_TOKEN_FACTORY = 0x411D79b8cC43384FDE66CaBf9b6a17180c842511;
-
-  // https://etherscan.io/address/0xADC0A53095A0af87F3aa29FE0715B5c28016364e
-  address internal constant SWAP_COLLATERAL_ADAPTER = 0xADC0A53095A0af87F3aa29FE0715B5c28016364e;
-
-  // https://etherscan.io/address/0x379c1EDD1A41218bdbFf960a9d5AD2818Bf61aE8
-  address internal constant UI_GHO_DATA_PROVIDER = 0x379c1EDD1A41218bdbFf960a9d5AD2818Bf61aE8;
-
-  // https://etherscan.io/address/0xe3dFf4052F0bF6134ACb73bEaE8fe2317d71F047
-  address internal constant UI_INCENTIVE_DATA_PROVIDER = 0xe3dFf4052F0bF6134ACb73bEaE8fe2317d71F047;
-
-  // https://etherscan.io/address/0x3F78BBD206e4D3c504Eb854232EdA7e47E9Fd8FC
-  address internal constant UI_POOL_DATA_PROVIDER = 0x3F78BBD206e4D3c504Eb854232EdA7e47E9Fd8FC;
-
-  // https://etherscan.io/address/0xC7be5307ba715ce89b152f3Df0658295b3dbA8E2
-  address internal constant WALLET_BALANCE_PROVIDER = 0xC7be5307ba715ce89b152f3Df0658295b3dbA8E2;
-
-  // https://etherscan.io/address/0xd01607c3C5eCABa394D8be377a08590149325722
-  address internal constant WETH_GATEWAY = 0xd01607c3C5eCABa394D8be377a08590149325722;
-
-  // https://etherscan.io/address/0x78F8Bd884C3D738B74B420540659c82f392820e0
-  address internal constant WITHDRAW_SWAP_ADAPTER = 0x78F8Bd884C3D738B74B420540659c82f392820e0;
-
-  // https://etherscan.io/address/0xE28E2c8d240dd5eBd0adcab86fbD79df7a052034
-  address internal constant SAVINGS_DAI_TOKEN_WRAPPER = 0xE28E2c8d240dd5eBd0adcab86fbD79df7a052034;
-
-  // https://etherscan.io/address/0xCb0b5cA20b6C5C02A9A3B2cE433650768eD2974F
-  address internal constant STATA_FACTORY = 0xCb0b5cA20b6C5C02A9A3B2cE433650768eD2974F;
-
-  // https://etherscan.io/address/0x31a0Ba3C2242a095dBF58A7C53751eCBd27dBA9b
-  address internal constant DUST_BIN = 0x31a0Ba3C2242a095dBF58A7C53751eCBd27dBA9b;
-
-  // https://etherscan.io/address/0xf00E2de0E78DFf055A92AD4719a179CE275b6Ef7
-  address internal constant CLINIC_STEWARD = 0xf00E2de0E78DFf055A92AD4719a179CE275b6Ef7;
-
-  // https://etherscan.io/address/0x8b493f416F5F7933cC146b1899c069F2361cad60
-  address internal constant SVR_STEWARD = 0x8b493f416F5F7933cC146b1899c069F2361cad60;
-
-  // https://etherscan.io/address/0x22aC12a6937BBBC0a301AF9154d08EaD95673122
-  address internal constant POOL_EXPOSURE_STEWARD = 0x22aC12a6937BBBC0a301AF9154d08EaD95673122;
-
-  // https://etherscan.io/address/0x83ab600cE8a61b43e1757b89C0589928f765c1C4
-  address internal constant EDGE_INJECTOR_PENDLE_EMODE = 0x83ab600cE8a61b43e1757b89C0589928f765c1C4;
-}
-
-library AaveV3EthereumAssets {
-  // https://etherscan.io/address/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2
-  address internal constant WETH_UNDERLYING = 0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2;
-
-  uint8 internal constant WETH_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8
-  address internal constant WETH_A_TOKEN = 0x4d5F47FA6A74757f35C14fD3a6Ef8E3C9BC514E8;
-
-  // https://etherscan.io/address/0xeA51d7853EEFb32b6ee06b1C12E6dcCA88Be0fFE
-  address internal constant WETH_V_TOKEN = 0xeA51d7853EEFb32b6ee06b1C12E6dcCA88Be0fFE;
-
-  // https://etherscan.io/address/0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419
-  address internal constant WETH_ORACLE = 0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant WETH_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x252231882FB38481497f3C767469106297c8d93b
-  address internal constant WETH_STATIC_A_TOKEN = 0x252231882FB38481497f3C767469106297c8d93b;
-
-  // https://etherscan.io/address/0x0bfc9d54Fc184518A81162F8fB99c2eACa081202
-  address internal constant WETH_STATA_TOKEN = 0x0bfc9d54Fc184518A81162F8fB99c2eACa081202;
-
-  // https://etherscan.io/address/0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0
-  address internal constant wstETH_UNDERLYING = 0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0;
-
-  uint8 internal constant wstETH_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x0B925eD163218f6662a35e0f0371Ac234f9E9371
-  address internal constant wstETH_A_TOKEN = 0x0B925eD163218f6662a35e0f0371Ac234f9E9371;
-
-  // https://etherscan.io/address/0xC96113eED8cAB59cD8A66813bCB0cEb29F06D2e4
-  address internal constant wstETH_V_TOKEN = 0xC96113eED8cAB59cD8A66813bCB0cEb29F06D2e4;
-
-  // https://etherscan.io/address/0xB4aB0c94159bc2d8C133946E7241368fc2F2a010
-  address internal constant wstETH_ORACLE = 0xB4aB0c94159bc2d8C133946E7241368fc2F2a010;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant wstETH_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x322AA5F5Be95644d6c36544B6c5061F072D16DF5
-  address internal constant wstETH_STATIC_A_TOKEN = 0x322AA5F5Be95644d6c36544B6c5061F072D16DF5;
-
-  // https://etherscan.io/address/0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599
-  address internal constant WBTC_UNDERLYING = 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599;
-
-  uint8 internal constant WBTC_DECIMALS = 8;
-
-  // https://etherscan.io/address/0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8
-  address internal constant WBTC_A_TOKEN = 0x5Ee5bf7ae06D1Be5997A1A72006FE6C607eC6DE8;
-
-  // https://etherscan.io/address/0x40aAbEf1aa8f0eEc637E0E7d92fbfFB2F26A8b7B
-  address internal constant WBTC_V_TOKEN = 0x40aAbEf1aa8f0eEc637E0E7d92fbfFB2F26A8b7B;
-
-  // https://etherscan.io/address/0xDaa4B74C6bAc4e25188e64ebc68DB5050b690cAc
-  address internal constant WBTC_ORACLE = 0xDaa4B74C6bAc4e25188e64ebc68DB5050b690cAc;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant WBTC_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xB07E357cc262E92eee03D8B81464D596B258eA7a
-  address internal constant WBTC_STATIC_A_TOKEN = 0xB07E357cc262E92eee03D8B81464D596B258eA7a;
-
-  // https://etherscan.io/address/0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48
-  address internal constant USDC_UNDERLYING = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;
-
-  uint8 internal constant USDC_DECIMALS = 6;
-
-  // https://etherscan.io/address/0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c
-  address internal constant USDC_A_TOKEN = 0x98C23E9d8f34FEFb1B7BD6a91B7FF122F4e16F5c;
-
-  // https://etherscan.io/address/0x72E95b8931767C79bA4EeE721354d6E99a61D004
-  address internal constant USDC_V_TOKEN = 0x72E95b8931767C79bA4EeE721354d6E99a61D004;
-
-  // https://etherscan.io/address/0xB6557F02F0a5dA7b9D3C2d979cc19e00e756F6dA
-  address internal constant USDC_ORACLE = 0xB6557F02F0a5dA7b9D3C2d979cc19e00e756F6dA;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant USDC_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x73edDFa87C71ADdC275c2b9890f5c3a8480bC9E6
-  address internal constant USDC_STATIC_A_TOKEN = 0x73edDFa87C71ADdC275c2b9890f5c3a8480bC9E6;
-
-  // https://etherscan.io/address/0xD4fa2D31b7968E448877f69A96DE69f5de8cD23E
-  address internal constant USDC_STATA_TOKEN = 0xD4fa2D31b7968E448877f69A96DE69f5de8cD23E;
-
-  // https://etherscan.io/address/0x6B175474E89094C44Da98b954EedeAC495271d0F
-  address internal constant DAI_UNDERLYING = 0x6B175474E89094C44Da98b954EedeAC495271d0F;
-
-  uint8 internal constant DAI_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x018008bfb33d285247A21d44E50697654f754e63
-  address internal constant DAI_A_TOKEN = 0x018008bfb33d285247A21d44E50697654f754e63;
-
-  // https://etherscan.io/address/0xcF8d0c70c850859266f5C338b38F9D663181C314
-  address internal constant DAI_V_TOKEN = 0xcF8d0c70c850859266f5C338b38F9D663181C314;
-
-  // https://etherscan.io/address/0x5c66322CA59bB61e867B28195576DbD8dA4b08dE
-  address internal constant DAI_ORACLE = 0x5c66322CA59bB61e867B28195576DbD8dA4b08dE;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant DAI_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xaf270C38fF895EA3f95Ed488CEACe2386F038249
-  address internal constant DAI_STATIC_A_TOKEN = 0xaf270C38fF895EA3f95Ed488CEACe2386F038249;
-
-  // https://etherscan.io/address/0x5caF5a86f39073637Ac7c8A7b5290871de80cb9b
-  address internal constant DAI_STATA_TOKEN = 0x5caF5a86f39073637Ac7c8A7b5290871de80cb9b;
-
-  // https://etherscan.io/address/0x514910771AF9Ca656af840dff83E8264EcF986CA
-  address internal constant LINK_UNDERLYING = 0x514910771AF9Ca656af840dff83E8264EcF986CA;
-
-  uint8 internal constant LINK_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x5E8C8A7243651DB1384C0dDfDbE39761E8e7E51a
-  address internal constant LINK_A_TOKEN = 0x5E8C8A7243651DB1384C0dDfDbE39761E8e7E51a;
-
-  // https://etherscan.io/address/0x4228F8895C7dDA20227F6a5c6751b8Ebf19a6ba8
-  address internal constant LINK_V_TOKEN = 0x4228F8895C7dDA20227F6a5c6751b8Ebf19a6ba8;
-
-  // https://etherscan.io/address/0xC7e9b623ed51F033b32AE7f1282b1AD62C28C183
-  address internal constant LINK_ORACLE = 0xC7e9b623ed51F033b32AE7f1282b1AD62C28C183;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant LINK_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x57bd8C73838d1781b4f6E0d5Cf89eb676488d3df
-  address internal constant LINK_STATIC_A_TOKEN = 0x57bd8C73838d1781b4f6E0d5Cf89eb676488d3df;
-
-  // https://etherscan.io/address/0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9
-  address internal constant AAVE_UNDERLYING = 0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9;
-
-  uint8 internal constant AAVE_DECIMALS = 18;
-
-  // https://etherscan.io/address/0xA700b4eB416Be35b2911fd5Dee80678ff64fF6C9
-  address internal constant AAVE_A_TOKEN = 0xA700b4eB416Be35b2911fd5Dee80678ff64fF6C9;
-
-  // https://etherscan.io/address/0xBae535520Abd9f8C85E58929e0006A2c8B372F74
-  address internal constant AAVE_V_TOKEN = 0xBae535520Abd9f8C85E58929e0006A2c8B372F74;
-
-  // https://etherscan.io/address/0xF02C1e2A3B77c1cacC72f72B44f7d0a4c62e4a85
-  address internal constant AAVE_ORACLE = 0xF02C1e2A3B77c1cacC72f72B44f7d0a4c62e4a85;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant AAVE_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xFEB859A50f92C6D5ad7C9eF7C2c060D164B3280f
-  address internal constant AAVE_STATIC_A_TOKEN = 0xFEB859A50f92C6D5ad7C9eF7C2c060D164B3280f;
-
-  // https://etherscan.io/address/0xBe9895146f7AF43049ca1c1AE358B0541Ea49704
-  address internal constant cbETH_UNDERLYING = 0xBe9895146f7AF43049ca1c1AE358B0541Ea49704;
-
-  uint8 internal constant cbETH_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x977b6fc5dE62598B08C85AC8Cf2b745874E8b78c
-  address internal constant cbETH_A_TOKEN = 0x977b6fc5dE62598B08C85AC8Cf2b745874E8b78c;
-
-  // https://etherscan.io/address/0x0c91bcA95b5FE69164cE583A2ec9429A569798Ed
-  address internal constant cbETH_V_TOKEN = 0x0c91bcA95b5FE69164cE583A2ec9429A569798Ed;
-
-  // https://etherscan.io/address/0x6243d2F41b4ec944F731f647589E28d9745a2674
-  address internal constant cbETH_ORACLE = 0x6243d2F41b4ec944F731f647589E28d9745a2674;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant cbETH_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xe2a6863C8f043457B497667Ef3c43073e2D69089
-  address internal constant cbETH_STATIC_A_TOKEN = 0xe2a6863C8f043457B497667Ef3c43073e2D69089;
-
-  // https://etherscan.io/address/0xdAC17F958D2ee523a2206206994597C13D831ec7
-  address internal constant USDT_UNDERLYING = 0xdAC17F958D2ee523a2206206994597C13D831ec7;
-
-  uint8 internal constant USDT_DECIMALS = 6;
-
-  // https://etherscan.io/address/0x23878914EFE38d27C4D67Ab83ed1b93A74D4086a
-  address internal constant USDT_A_TOKEN = 0x23878914EFE38d27C4D67Ab83ed1b93A74D4086a;
-
-  // https://etherscan.io/address/0x6df1C1E379bC5a00a7b4C6e67A203333772f45A8
-  address internal constant USDT_V_TOKEN = 0x6df1C1E379bC5a00a7b4C6e67A203333772f45A8;
-
-  // https://etherscan.io/address/0x260326c220E469358846b187eE53328303Efe19C
-  address internal constant USDT_ORACLE = 0x260326c220E469358846b187eE53328303Efe19C;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant USDT_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x862c57d48becB45583AEbA3f489696D22466Ca1b
-  address internal constant USDT_STATIC_A_TOKEN = 0x862c57d48becB45583AEbA3f489696D22466Ca1b;
-
-  // https://etherscan.io/address/0x7Bc3485026Ac48b6cf9BaF0A377477Fff5703Af8
-  address internal constant USDT_STATA_TOKEN = 0x7Bc3485026Ac48b6cf9BaF0A377477Fff5703Af8;
-
-  // https://etherscan.io/address/0xae78736Cd615f374D3085123A210448E74Fc6393
-  address internal constant rETH_UNDERLYING = 0xae78736Cd615f374D3085123A210448E74Fc6393;
-
-  uint8 internal constant rETH_DECIMALS = 18;
-
-  // https://etherscan.io/address/0xCc9EE9483f662091a1de4795249E24aC0aC2630f
-  address internal constant rETH_A_TOKEN = 0xCc9EE9483f662091a1de4795249E24aC0aC2630f;
-
-  // https://etherscan.io/address/0xae8593DD575FE29A9745056aA91C4b746eee62C8
-  address internal constant rETH_V_TOKEN = 0xae8593DD575FE29A9745056aA91C4b746eee62C8;
-
-  // https://etherscan.io/address/0x5AE8365D0a30D67145f0c55A08760C250559dB64
-  address internal constant rETH_ORACLE = 0x5AE8365D0a30D67145f0c55A08760C250559dB64;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant rETH_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x867Cf025B5dA438c4e215c60B59bBB3aFe896Fda
-  address internal constant rETH_STATIC_A_TOKEN = 0x867Cf025B5dA438c4e215c60B59bBB3aFe896Fda;
-
-  // https://etherscan.io/address/0x5f98805A4E8be255a32880FDeC7F6728C6568bA0
-  address internal constant LUSD_UNDERLYING = 0x5f98805A4E8be255a32880FDeC7F6728C6568bA0;
-
-  uint8 internal constant LUSD_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x3Fe6a295459FAe07DF8A0ceCC36F37160FE86AA9
-  address internal constant LUSD_A_TOKEN = 0x3Fe6a295459FAe07DF8A0ceCC36F37160FE86AA9;
-
-  // https://etherscan.io/address/0x33652e48e4B74D18520f11BfE58Edd2ED2cEc5A2
-  address internal constant LUSD_V_TOKEN = 0x33652e48e4B74D18520f11BfE58Edd2ED2cEc5A2;
-
-  // https://etherscan.io/address/0xEbb721daf3DA9f1b3dcEc590cDf648137172d7CB
-  address internal constant LUSD_ORACLE = 0xEbb721daf3DA9f1b3dcEc590cDf648137172d7CB;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant LUSD_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xDBf5E36569798D1E39eE9d7B1c61A7409a74F23A
-  address internal constant LUSD_STATIC_A_TOKEN = 0xDBf5E36569798D1E39eE9d7B1c61A7409a74F23A;
-
-  // https://etherscan.io/address/0xD533a949740bb3306d119CC777fa900bA034cd52
-  address internal constant CRV_UNDERLYING = 0xD533a949740bb3306d119CC777fa900bA034cd52;
-
-  uint8 internal constant CRV_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x7B95Ec873268a6BFC6427e7a28e396Db9D0ebc65
-  address internal constant CRV_A_TOKEN = 0x7B95Ec873268a6BFC6427e7a28e396Db9D0ebc65;
-
-  // https://etherscan.io/address/0x1b7D3F4b3c032a5AE656e30eeA4e8E1Ba376068F
-  address internal constant CRV_V_TOKEN = 0x1b7D3F4b3c032a5AE656e30eeA4e8E1Ba376068F;
-
-  // https://etherscan.io/address/0xCd627aA160A6fA45Eb793D19Ef54f5062F20f33f
-  address internal constant CRV_ORACLE = 0xCd627aA160A6fA45Eb793D19Ef54f5062F20f33f;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant CRV_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x149EE12310D499F701B6A5714eDAd2C832008fd2
-  address internal constant CRV_STATIC_A_TOKEN = 0x149EE12310D499F701B6A5714eDAd2C832008fd2;
-
-  // https://etherscan.io/address/0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2
-  address internal constant MKR_UNDERLYING = 0x9f8F72aA9304c8B593d555F12eF6589cC3A579A2;
-
-  uint8 internal constant MKR_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x8A458A9dc9048e005d22849F470891b840296619
-  address internal constant MKR_A_TOKEN = 0x8A458A9dc9048e005d22849F470891b840296619;
-
-  // https://etherscan.io/address/0x6Efc73E54E41b27d2134fF9f98F15550f30DF9B1
-  address internal constant MKR_V_TOKEN = 0x6Efc73E54E41b27d2134fF9f98F15550f30DF9B1;
-
-  // https://etherscan.io/address/0xec1D1B3b0443256cc3860e24a46F108e699484Aa
-  address internal constant MKR_ORACLE = 0xec1D1B3b0443256cc3860e24a46F108e699484Aa;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant MKR_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F
-  address internal constant SNX_UNDERLYING = 0xC011a73ee8576Fb46F5E1c5751cA3B9Fe0af2a6F;
-
-  uint8 internal constant SNX_DECIMALS = 18;
-
-  // https://etherscan.io/address/0xC7B4c17861357B8ABB91F25581E7263E08DCB59c
-  address internal constant SNX_A_TOKEN = 0xC7B4c17861357B8ABB91F25581E7263E08DCB59c;
-
-  // https://etherscan.io/address/0x8d0de040e8aAd872eC3c33A3776dE9152D3c34ca
-  address internal constant SNX_V_TOKEN = 0x8d0de040e8aAd872eC3c33A3776dE9152D3c34ca;
-
-  // https://etherscan.io/address/0xDC3EA94CD0AC27d9A86C180091e7f78C683d3699
-  address internal constant SNX_ORACLE = 0xDC3EA94CD0AC27d9A86C180091e7f78C683d3699;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant SNX_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xaECEbdfE454d869A626cAb38226C52a1575D1866
-  address internal constant SNX_STATIC_A_TOKEN = 0xaECEbdfE454d869A626cAb38226C52a1575D1866;
-
-  // https://etherscan.io/address/0xba100000625a3754423978a60c9317c58a424e3D
-  address internal constant BAL_UNDERLYING = 0xba100000625a3754423978a60c9317c58a424e3D;
-
-  uint8 internal constant BAL_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x2516E7B3F76294e03C42AA4c5b5b4DCE9C436fB8
-  address internal constant BAL_A_TOKEN = 0x2516E7B3F76294e03C42AA4c5b5b4DCE9C436fB8;
-
-  // https://etherscan.io/address/0x3D3efceb4Ff0966D34d9545D3A2fa2dcdBf451f2
-  address internal constant BAL_V_TOKEN = 0x3D3efceb4Ff0966D34d9545D3A2fa2dcdBf451f2;
-
-  // https://etherscan.io/address/0xdF2917806E30300537aEB49A7663062F4d1F2b5F
-  address internal constant BAL_ORACLE = 0xdF2917806E30300537aEB49A7663062F4d1F2b5F;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant BAL_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984
-  address internal constant UNI_UNDERLYING = 0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984;
-
-  uint8 internal constant UNI_DECIMALS = 18;
-
-  // https://etherscan.io/address/0xF6D2224916DDFbbab6e6bd0D1B7034f4Ae0CaB18
-  address internal constant UNI_A_TOKEN = 0xF6D2224916DDFbbab6e6bd0D1B7034f4Ae0CaB18;
-
-  // https://etherscan.io/address/0xF64178Ebd2E2719F2B1233bCb5Ef6DB4bCc4d09a
-  address internal constant UNI_V_TOKEN = 0xF64178Ebd2E2719F2B1233bCb5Ef6DB4bCc4d09a;
-
-  // https://etherscan.io/address/0x553303d460EE0afB37EdFf9bE42922D8FF63220e
-  address internal constant UNI_ORACLE = 0x553303d460EE0afB37EdFf9bE42922D8FF63220e;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant UNI_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x78fb5E79D5cb59729D0cd72bEA7879aD2683454D
-  address internal constant UNI_STATIC_A_TOKEN = 0x78fb5E79D5cb59729D0cd72bEA7879aD2683454D;
-
-  // https://etherscan.io/address/0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32
-  address internal constant LDO_UNDERLYING = 0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32;
-
-  uint8 internal constant LDO_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x9A44fd41566876A39655f74971a3A6eA0a17a454
-  address internal constant LDO_A_TOKEN = 0x9A44fd41566876A39655f74971a3A6eA0a17a454;
-
-  // https://etherscan.io/address/0xc30808705C01289A3D306ca9CAB081Ba9114eC82
-  address internal constant LDO_V_TOKEN = 0xc30808705C01289A3D306ca9CAB081Ba9114eC82;
-
-  // https://etherscan.io/address/0xb01e6C9af83879B8e06a092f0DD94309c0D497E4
-  address internal constant LDO_ORACLE = 0xb01e6C9af83879B8e06a092f0DD94309c0D497E4;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant LDO_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x1eA6E1ba21601258401d0B9DB24eA0a07948458e
-  address internal constant LDO_STATIC_A_TOKEN = 0x1eA6E1ba21601258401d0B9DB24eA0a07948458e;
-
-  // https://etherscan.io/address/0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72
-  address internal constant ENS_UNDERLYING = 0xC18360217D8F7Ab5e7c516566761Ea12Ce7F9D72;
-
-  uint8 internal constant ENS_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x545bD6c032eFdde65A377A6719DEF2796C8E0f2e
-  address internal constant ENS_A_TOKEN = 0x545bD6c032eFdde65A377A6719DEF2796C8E0f2e;
-
-  // https://etherscan.io/address/0xd180D7fdD4092f07428eFE801E17BC03576b3192
-  address internal constant ENS_V_TOKEN = 0xd180D7fdD4092f07428eFE801E17BC03576b3192;
-
-  // https://etherscan.io/address/0x5C00128d4d1c2F4f652C267d7bcdD7aC99C16E16
-  address internal constant ENS_ORACLE = 0x5C00128d4d1c2F4f652C267d7bcdD7aC99C16E16;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant ENS_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x2767C27Eeaf3566082E74b963B6A0f5c9a46C8a1
-  address internal constant ENS_STATIC_A_TOKEN = 0x2767C27Eeaf3566082E74b963B6A0f5c9a46C8a1;
-
-  // https://etherscan.io/address/0x111111111117dC0aa78b770fA6A738034120C302
-  address internal constant ONE_INCH_UNDERLYING = 0x111111111117dC0aa78b770fA6A738034120C302;
-
-  uint8 internal constant ONE_INCH_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x71Aef7b30728b9BB371578f36c5A1f1502a5723e
-  address internal constant ONE_INCH_A_TOKEN = 0x71Aef7b30728b9BB371578f36c5A1f1502a5723e;
-
-  // https://etherscan.io/address/0xA38fCa8c6Bf9BdA52E76EB78f08CaA3BE7c5A970
-  address internal constant ONE_INCH_V_TOKEN = 0xA38fCa8c6Bf9BdA52E76EB78f08CaA3BE7c5A970;
-
-  // https://etherscan.io/address/0xc929ad75B72593967DE83E7F7Cda0493458261D9
-  address internal constant ONE_INCH_ORACLE = 0xc929ad75B72593967DE83E7F7Cda0493458261D9;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant ONE_INCH_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xB490fF18e55b8881C9527FE7E358dd363780449F
-  address internal constant ONE_INCH_STATIC_A_TOKEN = 0xB490fF18e55b8881C9527FE7E358dd363780449F;
-
-  // https://etherscan.io/address/0x853d955aCEf822Db058eb8505911ED77F175b99e
-  address internal constant FRAX_UNDERLYING = 0x853d955aCEf822Db058eb8505911ED77F175b99e;
-
-  uint8 internal constant FRAX_DECIMALS = 18;
-
-  // https://etherscan.io/address/0xd4e245848d6E1220DBE62e155d89fa327E43CB06
-  address internal constant FRAX_A_TOKEN = 0xd4e245848d6E1220DBE62e155d89fa327E43CB06;
-
-  // https://etherscan.io/address/0x88B8358F5BC87c2D7E116cCA5b65A9eEb2c5EA3F
-  address internal constant FRAX_V_TOKEN = 0x88B8358F5BC87c2D7E116cCA5b65A9eEb2c5EA3F;
-
-  // https://etherscan.io/address/0xeF50f8DC65402c3019586bc8725fCD0b99B8AAd7
-  address internal constant FRAX_ORACLE = 0xeF50f8DC65402c3019586bc8725fCD0b99B8AAd7;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant FRAX_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xEE66abD4D0f9908A48E08AE354B0f425De3e237E
-  address internal constant FRAX_STATIC_A_TOKEN = 0xEE66abD4D0f9908A48E08AE354B0f425De3e237E;
-
-  // https://etherscan.io/address/0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f
-  address internal constant GHO_UNDERLYING = 0x40D16FC0246aD3160Ccc09B8D0D3A2cD28aE6C2f;
-
-  uint8 internal constant GHO_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x00907f9921424583e7ffBfEdf84F92B7B2Be4977
-  address internal constant GHO_A_TOKEN = 0x00907f9921424583e7ffBfEdf84F92B7B2Be4977;
-
-  // https://etherscan.io/address/0x786dBff3f1292ae8F92ea68Cf93c30b34B1ed04B
-  address internal constant GHO_V_TOKEN = 0x786dBff3f1292ae8F92ea68Cf93c30b34B1ed04B;
-
-  // https://etherscan.io/address/0xD110cac5d8682A3b045D5524a9903E031d70FCCd
-  address internal constant GHO_ORACLE = 0xD110cac5d8682A3b045D5524a9903E031d70FCCd;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant GHO_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x048459E4fb3402e58d8900aF7283Ad574B91d742
-  address internal constant GHO_STATIC_A_TOKEN = 0x048459E4fb3402e58d8900aF7283Ad574B91d742;
-
-  // https://etherscan.io/address/0xD33526068D116cE69F19A9ee46F0bd304F21A51f
-  address internal constant RPL_UNDERLYING = 0xD33526068D116cE69F19A9ee46F0bd304F21A51f;
-
-  uint8 internal constant RPL_DECIMALS = 18;
-
-  // https://etherscan.io/address/0xB76CF92076adBF1D9C39294FA8e7A67579FDe357
-  address internal constant RPL_A_TOKEN = 0xB76CF92076adBF1D9C39294FA8e7A67579FDe357;
-
-  // https://etherscan.io/address/0x8988ECA19D502fd8b9CCd03fA3bD20a6f599bc2A
-  address internal constant RPL_V_TOKEN = 0x8988ECA19D502fd8b9CCd03fA3bD20a6f599bc2A;
-
-  // https://etherscan.io/address/0x4E155eD98aFE9034b7A5962f6C84c86d869daA9d
-  address internal constant RPL_ORACLE = 0x4E155eD98aFE9034b7A5962f6C84c86d869daA9d;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant RPL_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x95EF7cb3494e65dA4926bA330dBf540a13afFD17
-  address internal constant RPL_STATIC_A_TOKEN = 0x95EF7cb3494e65dA4926bA330dBf540a13afFD17;
-
-  // https://etherscan.io/address/0x91ad1f5443cF356010D2171D6D26B11C309c4b16
-  address internal constant RPL_STATA_TOKEN = 0x91ad1f5443cF356010D2171D6D26B11C309c4b16;
-
-  // https://etherscan.io/address/0x83F20F44975D03b1b09e64809B757c47f942BEeA
-  address internal constant sDAI_UNDERLYING = 0x83F20F44975D03b1b09e64809B757c47f942BEeA;
-
-  uint8 internal constant sDAI_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x4C612E3B15b96Ff9A6faED838F8d07d479a8dD4c
-  address internal constant sDAI_A_TOKEN = 0x4C612E3B15b96Ff9A6faED838F8d07d479a8dD4c;
-
-  // https://etherscan.io/address/0x8Db9D35e117d8b93C6Ca9b644b25BaD5d9908141
-  address internal constant sDAI_V_TOKEN = 0x8Db9D35e117d8b93C6Ca9b644b25BaD5d9908141;
-
-  // https://etherscan.io/address/0xf83B85205241c3BCCA0a09D32FaE65c16e0CF236
-  address internal constant sDAI_ORACLE = 0xf83B85205241c3BCCA0a09D32FaE65c16e0CF236;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant sDAI_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xFa7E3571786CE9489bBC58d9Cb8ecE8aAe6B56F3
-  address internal constant sDAI_STATIC_A_TOKEN = 0xFa7E3571786CE9489bBC58d9Cb8ecE8aAe6B56F3;
-
-  // https://etherscan.io/address/0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6
-  address internal constant STG_UNDERLYING = 0xAf5191B0De278C7286d6C7CC6ab6BB8A73bA2Cd6;
-
-  uint8 internal constant STG_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x1bA9843bD4327c6c77011406dE5fA8749F7E3479
-  address internal constant STG_A_TOKEN = 0x1bA9843bD4327c6c77011406dE5fA8749F7E3479;
-
-  // https://etherscan.io/address/0x655568bDd6168325EC7e58Bf39b21A856F906Dc2
-  address internal constant STG_V_TOKEN = 0x655568bDd6168325EC7e58Bf39b21A856F906Dc2;
-
-  // https://etherscan.io/address/0x7A9f34a0Aa917D438e9b6E630067062B7F8f6f3d
-  address internal constant STG_ORACLE = 0x7A9f34a0Aa917D438e9b6E630067062B7F8f6f3d;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant STG_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xdeFA4e8a7bcBA345F687a2f1456F5Edd9CE97202
-  address internal constant KNC_UNDERLYING = 0xdeFA4e8a7bcBA345F687a2f1456F5Edd9CE97202;
-
-  uint8 internal constant KNC_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x5b502e3796385E1e9755d7043B9C945C3aCCeC9C
-  address internal constant KNC_A_TOKEN = 0x5b502e3796385E1e9755d7043B9C945C3aCCeC9C;
-
-  // https://etherscan.io/address/0x253127Ffc04981cEA8932F406710661c2f2c3fD2
-  address internal constant KNC_V_TOKEN = 0x253127Ffc04981cEA8932F406710661c2f2c3fD2;
-
-  // https://etherscan.io/address/0xf8fF43E991A81e6eC886a3D281A2C6cC19aE70Fc
-  address internal constant KNC_ORACLE = 0xf8fF43E991A81e6eC886a3D281A2C6cC19aE70Fc;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant KNC_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0
-  address internal constant FXS_UNDERLYING = 0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0;
-
-  uint8 internal constant FXS_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x82F9c5ad306BBa1AD0De49bB5FA6F01bf61085ef
-  address internal constant FXS_A_TOKEN = 0x82F9c5ad306BBa1AD0De49bB5FA6F01bf61085ef;
-
-  // https://etherscan.io/address/0x68e9f0aD4e6f8F5DB70F6923d4d6d5b225B83b16
-  address internal constant FXS_V_TOKEN = 0x68e9f0aD4e6f8F5DB70F6923d4d6d5b225B83b16;
-
-  // https://etherscan.io/address/0x6Ebc52C8C1089be9eB3945C4350B68B8E4C2233f
-  address internal constant FXS_ORACLE = 0x6Ebc52C8C1089be9eB3945C4350B68B8E4C2233f;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant FXS_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E
-  address internal constant crvUSD_UNDERLYING = 0xf939E0A03FB07F59A73314E73794Be0E57ac1b4E;
-
-  uint8 internal constant crvUSD_DECIMALS = 18;
-
-  // https://etherscan.io/address/0xb82fa9f31612989525992FCfBB09AB22Eff5c85A
-  address internal constant crvUSD_A_TOKEN = 0xb82fa9f31612989525992FCfBB09AB22Eff5c85A;
-
-  // https://etherscan.io/address/0x028f7886F3e937f8479efaD64f31B3fE1119857a
-  address internal constant crvUSD_V_TOKEN = 0x028f7886F3e937f8479efaD64f31B3fE1119857a;
-
-  // https://etherscan.io/address/0x9Dc30dc58c72f5B669aEa01d02A2e4da194eE893
-  address internal constant crvUSD_ORACLE = 0x9Dc30dc58c72f5B669aEa01d02A2e4da194eE893;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant crvUSD_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x848107491E029AFDe0AC543779c7790382f15929
-  address internal constant crvUSD_STATIC_A_TOKEN = 0x848107491E029AFDe0AC543779c7790382f15929;
-
-  // https://etherscan.io/address/0x6c3ea9036406852006290770BEdFcAbA0e23A0e8
-  address internal constant PYUSD_UNDERLYING = 0x6c3ea9036406852006290770BEdFcAbA0e23A0e8;
-
-  uint8 internal constant PYUSD_DECIMALS = 6;
-
-  // https://etherscan.io/address/0x0C0d01AbF3e6aDfcA0989eBbA9d6e85dD58EaB1E
-  address internal constant PYUSD_A_TOKEN = 0x0C0d01AbF3e6aDfcA0989eBbA9d6e85dD58EaB1E;
-
-  // https://etherscan.io/address/0x57B67e4DE077085Fd0AF2174e9c14871BE664546
-  address internal constant PYUSD_V_TOKEN = 0x57B67e4DE077085Fd0AF2174e9c14871BE664546;
-
-  // https://etherscan.io/address/0x36964C0579D02E0a5AaAb89E24Cf8d7CDF3549EE
-  address internal constant PYUSD_ORACLE = 0x36964C0579D02E0a5AaAb89E24Cf8d7CDF3549EE;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant PYUSD_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x00F2a835758B33f3aC53516Ebd69f3dc77B0D152
-  address internal constant PYUSD_STATIC_A_TOKEN = 0x00F2a835758B33f3aC53516Ebd69f3dc77B0D152;
-
-  // https://etherscan.io/address/0xb51EDdDD8c47856D81C8681EA71404Cec93E92c6
-  address internal constant PYUSD_STATA_TOKEN = 0xb51EDdDD8c47856D81C8681EA71404Cec93E92c6;
-
-  // https://etherscan.io/address/0xCd5fE23C85820F7B72D0926FC9b05b43E359b7ee
-  address internal constant weETH_UNDERLYING = 0xCd5fE23C85820F7B72D0926FC9b05b43E359b7ee;
-
-  uint8 internal constant weETH_DECIMALS = 18;
-
-  // https://etherscan.io/address/0xBdfa7b7893081B35Fb54027489e2Bc7A38275129
-  address internal constant weETH_A_TOKEN = 0xBdfa7b7893081B35Fb54027489e2Bc7A38275129;
-
-  // https://etherscan.io/address/0x77ad9BF13a52517AD698D65913e8D381300c8Bf3
-  address internal constant weETH_V_TOKEN = 0x77ad9BF13a52517AD698D65913e8D381300c8Bf3;
-
-  // https://etherscan.io/address/0xf112aF6F0A332B815fbEf3Ff932c057E570b62d3
-  address internal constant weETH_ORACLE = 0xf112aF6F0A332B815fbEf3Ff932c057E570b62d3;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant weETH_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x867b0CDC4B39a19945E616c29639b0390b39db3B
-  address internal constant weETH_STATIC_A_TOKEN = 0x867b0CDC4B39a19945E616c29639b0390b39db3B;
-
-  // https://etherscan.io/address/0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38
-  address internal constant osETH_UNDERLYING = 0xf1C9acDc66974dFB6dEcB12aA385b9cD01190E38;
-
-  uint8 internal constant osETH_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x927709711794F3De5DdBF1D176bEE2D55Ba13c21
-  address internal constant osETH_A_TOKEN = 0x927709711794F3De5DdBF1D176bEE2D55Ba13c21;
-
-  // https://etherscan.io/address/0x8838eefF2af391863E1Bb8b1dF563F86743a8470
-  address internal constant osETH_V_TOKEN = 0x8838eefF2af391863E1Bb8b1dF563F86743a8470;
-
-  // https://etherscan.io/address/0x0A2AF898cEc35197e6944D9E0F525C2626393442
-  address internal constant osETH_ORACLE = 0x0A2AF898cEc35197e6944D9E0F525C2626393442;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant osETH_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xE5248968166206d14ab57345971E32facD839aDA
-  address internal constant osETH_STATIC_A_TOKEN = 0xE5248968166206d14ab57345971E32facD839aDA;
-
-  // https://etherscan.io/address/0x4c9EDD5852cd905f086C759E8383e09bff1E68B3
-  address internal constant USDe_UNDERLYING = 0x4c9EDD5852cd905f086C759E8383e09bff1E68B3;
-
-  uint8 internal constant USDe_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x4F5923Fc5FD4a93352581b38B7cD26943012DECF
-  address internal constant USDe_A_TOKEN = 0x4F5923Fc5FD4a93352581b38B7cD26943012DECF;
-
-  // https://etherscan.io/address/0x015396E1F286289aE23a762088E863b3ec465145
-  address internal constant USDe_V_TOKEN = 0x015396E1F286289aE23a762088E863b3ec465145;
-
-  // https://etherscan.io/address/0xC26D4a1c46d884cfF6dE9800B6aE7A8Cf48B4Ff8
-  address internal constant USDe_ORACLE = 0xC26D4a1c46d884cfF6dE9800B6aE7A8Cf48B4Ff8;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant USDe_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x46e5d6A33C8Bd8eD38F3c95991C78C9B2FF3bC99
-  address internal constant USDe_STATIC_A_TOKEN = 0x46e5d6A33C8Bd8eD38F3c95991C78C9B2FF3bC99;
-
-  // https://etherscan.io/address/0x5F9D59db355b4A60501544637b00e94082cA575b
-  address internal constant USDe_STATA_TOKEN = 0x5F9D59db355b4A60501544637b00e94082cA575b;
-
-  // https://etherscan.io/address/0xA35b1B31Ce002FBF2058D22F30f95D405200A15b
-  address internal constant ETHx_UNDERLYING = 0xA35b1B31Ce002FBF2058D22F30f95D405200A15b;
-
-  uint8 internal constant ETHx_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x1c0E06a0b1A4c160c17545FF2A951bfcA57C0002
-  address internal constant ETHx_A_TOKEN = 0x1c0E06a0b1A4c160c17545FF2A951bfcA57C0002;
-
-  // https://etherscan.io/address/0x08a8Dc81AeA67F84745623aC6c72CDA3967aab8b
-  address internal constant ETHx_V_TOKEN = 0x08a8Dc81AeA67F84745623aC6c72CDA3967aab8b;
-
-  // https://etherscan.io/address/0xD6270dAabFe4862306190298C2B48fed9e15C847
-  address internal constant ETHx_ORACLE = 0xD6270dAabFe4862306190298C2B48fed9e15C847;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant ETHx_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x7CC6694CF75C18D488d16FB4bf3c71A3B31cc7FB
-  address internal constant ETHx_STATIC_A_TOKEN = 0x7CC6694CF75C18D488d16FB4bf3c71A3B31cc7FB;
-
-  // https://etherscan.io/address/0x9D39A5DE30e57443BfF2A8307A4256c8797A3497
-  address internal constant sUSDe_UNDERLYING = 0x9D39A5DE30e57443BfF2A8307A4256c8797A3497;
-
-  uint8 internal constant sUSDe_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x4579a27aF00A62C0EB156349f31B345c08386419
-  address internal constant sUSDe_A_TOKEN = 0x4579a27aF00A62C0EB156349f31B345c08386419;
-
-  // https://etherscan.io/address/0xeFFDE9BFA8EC77c14C364055a200746d6e12BeD6
-  address internal constant sUSDe_V_TOKEN = 0xeFFDE9BFA8EC77c14C364055a200746d6e12BeD6;
-
-  // https://etherscan.io/address/0x42bc86f2f08419280a99d8fbEa4672e7c30a86ec
-  address internal constant sUSDe_ORACLE = 0x42bc86f2f08419280a99d8fbEa4672e7c30a86ec;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant sUSDe_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x54D612b000697bd8B0094889D7d6A92bA0Bf2DEa
-  address internal constant sUSDe_STATIC_A_TOKEN = 0x54D612b000697bd8B0094889D7d6A92bA0Bf2DEa;
-
-  // https://etherscan.io/address/0x18084fbA666a33d37592fA2633fD49a74DD93a88
-  address internal constant tBTC_UNDERLYING = 0x18084fbA666a33d37592fA2633fD49a74DD93a88;
-
-  uint8 internal constant tBTC_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x10Ac93971cdb1F5c778144084242374473c350Da
-  address internal constant tBTC_A_TOKEN = 0x10Ac93971cdb1F5c778144084242374473c350Da;
-
-  // https://etherscan.io/address/0xAC50890a80A2731eb1eA2e9B4F29569CeB06D960
-  address internal constant tBTC_V_TOKEN = 0xAC50890a80A2731eb1eA2e9B4F29569CeB06D960;
-
-  // https://etherscan.io/address/0xb41E773f507F7a7EA890b1afB7d2b660c30C8B0A
-  address internal constant tBTC_ORACLE = 0xb41E773f507F7a7EA890b1afB7d2b660c30C8B0A;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant tBTC_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf
-  address internal constant cbBTC_UNDERLYING = 0xcbB7C0000aB88B473b1f5aFd9ef808440eed33Bf;
-
-  uint8 internal constant cbBTC_DECIMALS = 8;
-
-  // https://etherscan.io/address/0x5c647cE0Ae10658ec44FA4E11A51c96e94efd1Dd
-  address internal constant cbBTC_A_TOKEN = 0x5c647cE0Ae10658ec44FA4E11A51c96e94efd1Dd;
-
-  // https://etherscan.io/address/0xeB284A70557EFe3591b9e6D9D720040E02c54a4d
-  address internal constant cbBTC_V_TOKEN = 0xeB284A70557EFe3591b9e6D9D720040E02c54a4d;
-
-  // https://etherscan.io/address/0xb41E773f507F7a7EA890b1afB7d2b660c30C8B0A
-  address internal constant cbBTC_ORACLE = 0xb41E773f507F7a7EA890b1afB7d2b660c30C8B0A;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant cbBTC_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xdC035D45d973E3EC169d2276DDab16f1e407384F
-  address internal constant USDS_UNDERLYING = 0xdC035D45d973E3EC169d2276DDab16f1e407384F;
-
-  uint8 internal constant USDS_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x32a6268f9Ba3642Dda7892aDd74f1D34469A4259
-  address internal constant USDS_A_TOKEN = 0x32a6268f9Ba3642Dda7892aDd74f1D34469A4259;
-
-  // https://etherscan.io/address/0x490E0E6255bF65b43E2e02F7acB783c5e04572Ff
-  address internal constant USDS_V_TOKEN = 0x490E0E6255bF65b43E2e02F7acB783c5e04572Ff;
-
-  // https://etherscan.io/address/0x94C7FD62fd0506e71d8142E9D36687fC72A86B02
-  address internal constant USDS_ORACLE = 0x94C7FD62fd0506e71d8142E9D36687fC72A86B02;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant USDS_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xb80B3215EA8183a064073f9892eb64236160a4dF
-  address internal constant USDS_STATA_TOKEN = 0xb80B3215EA8183a064073f9892eb64236160a4dF;
-
-  // https://etherscan.io/address/0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7
-  address internal constant rsETH_UNDERLYING = 0xA1290d69c65A6Fe4DF752f95823fae25cB99e5A7;
-
-  uint8 internal constant rsETH_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x2D62109243b87C4bA3EE7bA1D91B0dD0A074d7b1
-  address internal constant rsETH_A_TOKEN = 0x2D62109243b87C4bA3EE7bA1D91B0dD0A074d7b1;
-
-  // https://etherscan.io/address/0x6De3E52A1B7294A34e271a508082b1Ff4a37E30e
-  address internal constant rsETH_V_TOKEN = 0x6De3E52A1B7294A34e271a508082b1Ff4a37E30e;
-
-  // https://etherscan.io/address/0x47F52B2e43D0386cF161e001835b03Ad49889e3b
-  address internal constant rsETH_ORACLE = 0x47F52B2e43D0386cF161e001835b03Ad49889e3b;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant rsETH_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x8236a87084f8B84306f72007F36F2618A5634494
-  address internal constant LBTC_UNDERLYING = 0x8236a87084f8B84306f72007F36F2618A5634494;
-
-  uint8 internal constant LBTC_DECIMALS = 8;
-
-  // https://etherscan.io/address/0x65906988ADEe75306021C417a1A3458040239602
-  address internal constant LBTC_A_TOKEN = 0x65906988ADEe75306021C417a1A3458040239602;
-
-  // https://etherscan.io/address/0x68aeB290C7727D899B47c56d1c96AEAC475cD0dD
-  address internal constant LBTC_V_TOKEN = 0x68aeB290C7727D899B47c56d1c96AEAC475cD0dD;
-
-  // https://etherscan.io/address/0xb41E773f507F7a7EA890b1afB7d2b660c30C8B0A
-  address internal constant LBTC_ORACLE = 0xb41E773f507F7a7EA890b1afB7d2b660c30C8B0A;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant LBTC_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x657e8C867D8B37dCC18fA4Caead9C45EB088C642
-  address internal constant eBTC_UNDERLYING = 0x657e8C867D8B37dCC18fA4Caead9C45EB088C642;
-
-  uint8 internal constant eBTC_DECIMALS = 8;
-
-  // https://etherscan.io/address/0x5fefd7069a7D91d01f269DADE14526CCF3487810
-  address internal constant eBTC_A_TOKEN = 0x5fefd7069a7D91d01f269DADE14526CCF3487810;
-
-  // https://etherscan.io/address/0x47eD0509e64615c0d5C6d39AF1B38D02Bc9fE58f
-  address internal constant eBTC_V_TOKEN = 0x47eD0509e64615c0d5C6d39AF1B38D02Bc9fE58f;
-
-  // https://etherscan.io/address/0x577C217cB5b1691A500D48aA7F69346409cFd668
-  address internal constant eBTC_ORACLE = 0x577C217cB5b1691A500D48aA7F69346409cFd668;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant eBTC_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x8292Bb45bf1Ee4d140127049757C2E0fF06317eD
-  address internal constant RLUSD_UNDERLYING = 0x8292Bb45bf1Ee4d140127049757C2E0fF06317eD;
-
-  uint8 internal constant RLUSD_DECIMALS = 18;
-
-  // https://etherscan.io/address/0xFa82580c16A31D0c1bC632A36F82e83EfEF3Eec0
-  address internal constant RLUSD_A_TOKEN = 0xFa82580c16A31D0c1bC632A36F82e83EfEF3Eec0;
-
-  // https://etherscan.io/address/0xBdFe7aD7976d5d7E0965ea83a81Ca1bCfF7e84a9
-  address internal constant RLUSD_V_TOKEN = 0xBdFe7aD7976d5d7E0965ea83a81Ca1bCfF7e84a9;
-
-  // https://etherscan.io/address/0xf0eaC18E908B34770FDEe46d069c846bDa866759
-  address internal constant RLUSD_ORACLE = 0xf0eaC18E908B34770FDEe46d069c846bDa866759;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant RLUSD_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x6A1792a91C08e9f0bFe7a990871B786643237f0F
-  address internal constant RLUSD_STATA_TOKEN = 0x6A1792a91C08e9f0bFe7a990871B786643237f0F;
-
-  // https://etherscan.io/address/0x50D2C7992b802Eef16c04FeADAB310f31866a545
-  address internal constant PT_eUSDE_29MAY2025_UNDERLYING = 0x50D2C7992b802Eef16c04FeADAB310f31866a545;
-
-  uint8 internal constant PT_eUSDE_29MAY2025_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x4B0821e768Ed9039a70eD1E80E15E76a5bE5Df5F
-  address internal constant PT_eUSDE_29MAY2025_A_TOKEN = 0x4B0821e768Ed9039a70eD1E80E15E76a5bE5Df5F;
-
-  // https://etherscan.io/address/0x3c20fbFD32243Dd9899301C84bCe17413EeE0A0C
-  address internal constant PT_eUSDE_29MAY2025_V_TOKEN = 0x3c20fbFD32243Dd9899301C84bCe17413EeE0A0C;
-
-  // https://etherscan.io/address/0x5292AB3292D076271f853Ed8e05e61cc02F0A2C6
-  address internal constant PT_eUSDE_29MAY2025_ORACLE = 0x5292AB3292D076271f853Ed8e05e61cc02F0A2C6;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant PT_eUSDE_29MAY2025_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x3b3fB9C57858EF816833dC91565EFcd85D96f634
-  address internal constant PT_sUSDE_31JUL2025_UNDERLYING = 0x3b3fB9C57858EF816833dC91565EFcd85D96f634;
-
-  uint8 internal constant PT_sUSDE_31JUL2025_DECIMALS = 18;
-
-  // https://etherscan.io/address/0xDE6eF6CB4aBd3A473ffC2942eEf5D84536F8E864
-  address internal constant PT_sUSDE_31JUL2025_A_TOKEN = 0xDE6eF6CB4aBd3A473ffC2942eEf5D84536F8E864;
-
-  // https://etherscan.io/address/0x8C6FeaF5d58BA1A6541F9c4aF685f62bFCBaC3b1
-  address internal constant PT_sUSDE_31JUL2025_V_TOKEN = 0x8C6FeaF5d58BA1A6541F9c4aF685f62bFCBaC3b1;
-
-  // https://etherscan.io/address/0x759B9B72700A129CD7AD8e53F9c99cb48Fd57105
-  address internal constant PT_sUSDE_31JUL2025_ORACLE = 0x759B9B72700A129CD7AD8e53F9c99cb48Fd57105;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant PT_sUSDE_31JUL2025_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xC139190F447e929f090Edeb554D95AbB8b18aC1C
-  address internal constant USDtb_UNDERLYING = 0xC139190F447e929f090Edeb554D95AbB8b18aC1C;
-
-  uint8 internal constant USDtb_DECIMALS = 18;
-
-  // https://etherscan.io/address/0xEc4ef66D4fCeEba34aBB4dE69dB391Bc5476ccc8
-  address internal constant USDtb_A_TOKEN = 0xEc4ef66D4fCeEba34aBB4dE69dB391Bc5476ccc8;
-
-  // https://etherscan.io/address/0xeA85a065F87FE28Aa8Fbf0D6C7deC472b106252C
-  address internal constant USDtb_V_TOKEN = 0xeA85a065F87FE28Aa8Fbf0D6C7deC472b106252C;
-
-  // https://etherscan.io/address/0x2FA6A78E3d617c1013a22938411602dc9Da98dBa
-  address internal constant USDtb_ORACLE = 0x2FA6A78E3d617c1013a22938411602dc9Da98dBa;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant USDtb_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x917459337CaAC939D41d7493B3999f571D20D667
-  address internal constant PT_USDe_31JUL2025_UNDERLYING = 0x917459337CaAC939D41d7493B3999f571D20D667;
-
-  uint8 internal constant PT_USDe_31JUL2025_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x312ffC57778CEfa11989733e6E08143E7E229c1c
-  address internal constant PT_USDe_31JUL2025_A_TOKEN = 0x312ffC57778CEfa11989733e6E08143E7E229c1c;
-
-  // https://etherscan.io/address/0xd90DA2Df915B87fE1621A7F2201FbF4ff2cCA031
-  address internal constant PT_USDe_31JUL2025_V_TOKEN = 0xd90DA2Df915B87fE1621A7F2201FbF4ff2cCA031;
-
-  // https://etherscan.io/address/0x6b99e86B48Fee533B7Bee602e7959f024051Eca0
-  address internal constant PT_USDe_31JUL2025_ORACLE = 0x6b99e86B48Fee533B7Bee602e7959f024051Eca0;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant PT_USDe_31JUL2025_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x14Bdc3A3AE09f5518b923b69489CBcAfB238e617
-  address internal constant PT_eUSDE_14AUG2025_UNDERLYING = 0x14Bdc3A3AE09f5518b923b69489CBcAfB238e617;
-
-  uint8 internal constant PT_eUSDE_14AUG2025_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x2eDff5AF94334fBd7C38ae318edf1c40e072b73B
-  address internal constant PT_eUSDE_14AUG2025_A_TOKEN = 0x2eDff5AF94334fBd7C38ae318edf1c40e072b73B;
-
-  // https://etherscan.io/address/0x22517fE16DEd08e52E7EA3423A2EA4995b1f1731
-  address internal constant PT_eUSDE_14AUG2025_V_TOKEN = 0x22517fE16DEd08e52E7EA3423A2EA4995b1f1731;
-
-  // https://etherscan.io/address/0x03f9bA9A897241985c1f12bCe97fAC1B0bd4a7A7
-  address internal constant PT_eUSDE_14AUG2025_ORACLE = 0x03f9bA9A897241985c1f12bCe97fAC1B0bd4a7A7;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant PT_eUSDE_14AUG2025_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0x90D2af7d622ca3141efA4d8f1F24d86E5974Cc8F
-  address internal constant eUSDe_UNDERLYING = 0x90D2af7d622ca3141efA4d8f1F24d86E5974Cc8F;
-
-  uint8 internal constant eUSDe_DECIMALS = 18;
-
-  // https://etherscan.io/address/0x5F9190496e0DFC831C3bd307978de4a245E2F5cD
-  address internal constant eUSDe_A_TOKEN = 0x5F9190496e0DFC831C3bd307978de4a245E2F5cD;
-
-  // https://etherscan.io/address/0x48351fCc9536dA440AE9471220F6dC921b0eB703
-  address internal constant eUSDe_V_TOKEN = 0x48351fCc9536dA440AE9471220F6dC921b0eB703;
-
-  // https://etherscan.io/address/0xc7Ad695ac0ae38Ae308640897E51468977A862a2
-  address internal constant eUSDe_ORACLE = 0xc7Ad695ac0ae38Ae308640897E51468977A862a2;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant eUSDe_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-
-  // https://etherscan.io/address/0xC96dE26018A54D51c097160568752c4E3BD6C364
-  address internal constant FBTC_UNDERLYING = 0xC96dE26018A54D51c097160568752c4E3BD6C364;
-
-  uint8 internal constant FBTC_DECIMALS = 8;
-
-  // https://etherscan.io/address/0xcCA43ceF272c30415866914351fdfc3E881bb7c2
-  address internal constant FBTC_A_TOKEN = 0xcCA43ceF272c30415866914351fdfc3E881bb7c2;
-
-  // https://etherscan.io/address/0x4A35FD7F93324Cc48bc12190D3F37493437b1Eff
-  address internal constant FBTC_V_TOKEN = 0x4A35FD7F93324Cc48bc12190D3F37493437b1Eff;
-
-  // https://etherscan.io/address/0xb41E773f507F7a7EA890b1afB7d2b660c30C8B0A
-  address internal constant FBTC_ORACLE = 0xb41E773f507F7a7EA890b1afB7d2b660c30C8B0A;
-
-  // https://etherscan.io/address/0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB
-  address internal constant FBTC_INTEREST_RATE_STRATEGY = 0x9ec6F08190DeA04A54f8Afc53Db96134e5E3FdFB;
-}
-
-library AaveV3EthereumEModes {
-  uint8 internal constant NONE = 0;
-
-  uint8 internal constant ETH_CORRELATED = 1;
-
-  uint8 internal constant SUSDE_STABLECOINS = 2;
-
-  uint8 internal constant RSETH_LST_MAIN = 3;
-
-  uint8 internal constant LBTC_WBTC = 4;
-
-  uint8 internal constant LBTC_CBBTC = 5;
-
-  uint8 internal constant LBTC_TBTC = 6;
-
-  uint8 internal constant EBTC_WBTC = 7;
-
-  uint8 internal constant PT_SUSDE_STABLECOINS_JUL_2025 = 8;
-
-  uint8 internal constant PT_EUSDE_STABLECOINS_MAY_2025 = 9;
-
-  uint8 internal constant PT_USDE_STABLECOINS_JULY_2025 = 10;
-
-  uint8 internal constant USDE_STABLECOIN = 11;
-
-  uint8 internal constant PT_USDE_USDE_JULY_2025 = 12;
-
-  uint8 internal constant PT_EUSDE_STABLECOINS_AUGUST_2025 = 13;
-
-  uint8 internal constant PT_EUSDE_USDE_AUGUST_2025 = 14;
-
-  uint8 internal constant EUSDE_STABLECOIN = 15;
-
-  uint8 internal constant FBTC_WBTC = 16;
-}
-
-library AaveV3EthereumExternalLibraries {
-  // https://etherscan.io/address/0x34039100cc9584Ae5D741d322e16d0d18CEE8770
-  address internal constant FLASHLOAN_LOGIC = 0x34039100cc9584Ae5D741d322e16d0d18CEE8770;
-
-  // https://etherscan.io/address/0x62325c94E1c49dcDb5937726aB5D8A4c37bCAd36
-  address internal constant BORROW_LOGIC = 0x62325c94E1c49dcDb5937726aB5D8A4c37bCAd36;
-
-  // https://etherscan.io/address/0x621Ef86D8A5C693a06295BC288B95C12D4CE4994
-  address internal constant BRIDGE_LOGIC = 0x621Ef86D8A5C693a06295BC288B95C12D4CE4994;
-
-  // https://etherscan.io/address/0xC31d2362fAeD85dF79d0bec99693D0EB0Abd3f74
-  address internal constant E_MODE_LOGIC = 0xC31d2362fAeD85dF79d0bec99693D0EB0Abd3f74;
-
-  // https://etherscan.io/address/0x4731bF01583F991278692E8727d0700a00A1fBBf
-  address internal constant LIQUIDATION_LOGIC = 0x4731bF01583F991278692E8727d0700a00A1fBBf;
-
-  // https://etherscan.io/address/0xf8C97539934ee66a67C26010e8e027D77E821B0C
-  address internal constant POOL_LOGIC = 0xf8C97539934ee66a67C26010e8e027D77E821B0C;
-
-  // https://etherscan.io/address/0x185477906B46D9b8DE0DEB73A1bBfb87b5b51BC3
-  address internal constant SUPPLY_LOGIC = 0x185477906B46D9b8DE0DEB73A1bBfb87b5b51BC3;
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/AggregatorInterface.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/AggregatorInterface.sol
deleted file mode 100644
index 42a6527..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/AggregatorInterface.sol
+++ /dev/null
@@ -1,33 +0,0 @@
-// SPDX-License-Identifier: MIT
-// Chainlink Contracts v0.8
-pragma solidity ^0.8.0;
-
-interface AggregatorInterface {
-  function decimals() external view returns (uint8);
-
-  function description() external view returns (string memory);
-
-  function getRoundData(uint80 _roundId)
-    external
-    view
-    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);
-
-  function latestRoundData()
-    external
-    view
-    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);
-
-  function latestAnswer() external view returns (int256);
-
-  function latestTimestamp() external view returns (uint256);
-
-  function latestRound() external view returns (uint256);
-
-  function getAnswer(uint256 roundId) external view returns (int256);
-
-  function getTimestamp(uint256 roundId) external view returns (uint256);
-
-  event AnswerUpdated(int256 indexed current, uint256 indexed roundId, uint256 updatedAt);
-
-  event NewRound(uint256 indexed roundId, address indexed startedBy, uint256 startedAt);
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ConfiguratorInputTypes.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ConfiguratorInputTypes.sol
deleted file mode 100644
index 58c8696..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ConfiguratorInputTypes.sol
+++ /dev/null
@@ -1,32 +0,0 @@
-// SPDX-License-Identifier: MIT
-pragma solidity ^0.8.0;
-
-library ConfiguratorInputTypes {
-  struct InitReserveInput {
-    address aTokenImpl;
-    address variableDebtTokenImpl;
-    address underlyingAsset;
-    string aTokenName;
-    string aTokenSymbol;
-    string variableDebtTokenName;
-    string variableDebtTokenSymbol;
-    bytes params;
-    bytes interestRateData;
-  }
-
-  struct UpdateATokenInput {
-    address asset;
-    string name;
-    string symbol;
-    address implementation;
-    bytes params;
-  }
-
-  struct UpdateDebtTokenInput {
-    address asset;
-    string name;
-    string symbol;
-    address implementation;
-    bytes params;
-  }
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/DataTypes.sol b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/DataTypes.sol
index 3debcd4..06e6aa3 100644
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/DataTypes.sol
+++ b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/DataTypes.sol
@@ -212,6 +212,8 @@ library DataTypes {
     InterestRateMode interestRateMode;
     address onBehalfOf;
     bool useATokens;
+    address oracle;
+    uint8 userEModeCategory;
   }
 
   struct ExecuteWithdrawParams {
@@ -235,9 +237,9 @@ library DataTypes {
     address asset;
     address from;
     address to;
-    uint256 amount;
-    uint256 balanceFromBefore;
-    uint256 balanceToBefore;
+    uint256 scaledAmount;
+    uint256 scaledBalanceFromBefore;
+    uint256 scaledBalanceToBefore;
     address oracle;
     uint8 fromEModeCategory;
   }
@@ -292,7 +294,7 @@ library DataTypes {
     UserConfigurationMap userConfig;
     address asset;
     address userAddress;
-    uint256 amount;
+    uint256 amountScaled;
     InterestRateMode interestRateMode;
     address oracle;
     uint8 userEModeCategory;
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/Errors.sol b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/Errors.sol
index 6c493d8..c8ba3d0 100644
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/Errors.sol
+++ b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/Errors.sol
@@ -35,7 +35,6 @@ library Errors {
   error BorrowingNotEnabled(); // 'Borrowing is not enabled'
   error NotEnoughAvailableUserBalance(); // 'User cannot withdraw more than the available balance'
   error InvalidInterestRateModeSelected(); // 'Invalid interest rate mode selected'
-  error CollateralBalanceIsZero(); // 'The collateral balance is 0'
   error HealthFactorLowerThanLiquidationThreshold(); // 'Health factor is below the liquidation threshold'
   error CollateralCannotCoverNewBorrow(); // 'There is not enough collateral to cover a new borrow'
   error NoDebtOfSelectedType(); // 'For repayment of a specific type of debt, the user needs to have debt that type'
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IAToken.sol b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/IAToken.sol
index e42351f..436c809 100644
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IAToken.sol
+++ b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/IAToken.sol
@@ -24,38 +24,47 @@ interface IAToken is IERC20, IScaledBalanceToken, IInitializableAToken {
    * @notice Mints `amount` aTokens to `user`
    * @param caller The address performing the mint
    * @param onBehalfOf The address of the user that will receive the minted aTokens
-   * @param amount The amount of tokens getting minted
+   * @param scaledAmount The scaled amount of tokens getting minted
    * @param index The next liquidity index of the reserve
    * @return `true` if the the previous balance of the user was 0
    */
-  function mint(address caller, address onBehalfOf, uint256 amount, uint256 index) external returns (bool);
+  function mint(address caller, address onBehalfOf, uint256 scaledAmount, uint256 index) external returns (bool);
 
   /**
-   * @notice Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`
-   * @dev In some instances, the mint event could be emitted from a burn transaction
-   * if the amount to burn is less than the interest that the user accrued
+   * @notice Burns aTokens from `user` and sends the equivalent amount of underlying to `receiverOfUnderlying`.
+   * @dev Passing both the unscaled and scaled amounts enhances precision. The `scaledAmount` is used for precise balance updates,
+   * while the `amount` is used for the underlying asset transfer, preventing cumulative rounding errors.
+   * @dev In some instances, a mint event may be emitted from a burn transaction if the amount to burn is less than the interest that the user accrued.
    * @param from The address from which the aTokens will be burned
    * @param receiverOfUnderlying The address that will receive the underlying
-   * @param amount The amount being burned
+   * @param amount The amount of underlying to be burned (non scaled)
+   * @param scaledAmount The scaled amount of aTokens to be burned (scaled)
    * @param index The next liquidity index of the reserve
+   * @return `true` if the the new balance of the user is 0
    */
-  function burn(address from, address receiverOfUnderlying, uint256 amount, uint256 index) external;
+  function burn(address from, address receiverOfUnderlying, uint256 amount, uint256 scaledAmount, uint256 index)
+    external
+    returns (bool);
 
   /**
    * @notice Mints aTokens to the reserve treasury
-   * @param amount The amount of tokens getting minted
+   * @param scaledAmount The scaled amount of tokens getting minted
    * @param index The next liquidity index of the reserve
    */
-  function mintToTreasury(uint256 amount, uint256 index) external;
+  function mintToTreasury(uint256 scaledAmount, uint256 index) external;
 
   /**
-   * @notice Transfers aTokens in the event of a borrow being liquidated, in case the liquidators reclaims the aToken
+   * @notice Transfers aTokens in the event of a borrow being liquidated, in case the liquidator reclaims the aToken.
+   * @dev Passing both the unscaled and scaled amounts enhances precision. The `scaledAmount` is used for precise balance updates,
+   * while the `amount` is used for logging and consistency, preventing cumulative rounding errors.
    * @param from The address getting liquidated, current owner of the aTokens
    * @param to The recipient
-   * @param value The amount of tokens getting transferred
+   * @param amount The amount of tokens getting transferred (non-scaled)
+   * @param scaledAmount The scaled amount of tokens getting transferred (scaled)
    * @param index The next liquidity index of the reserve
    */
-  function transferOnLiquidation(address from, address to, uint256 value, uint256 index) external;
+  function transferOnLiquidation(address from, address to, uint256 amount, uint256 scaledAmount, uint256 index)
+    external;
 
   /**
    * @notice Transfers the underlying asset to `target`.
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IATokenMainnetInstanceGHO.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IATokenMainnetInstanceGHO.sol
deleted file mode 100644
index 3837c2b..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IATokenMainnetInstanceGHO.sol
+++ /dev/null
@@ -1,12 +0,0 @@
-// SPDX-License-Identifier: BUSL-1.1
-pragma solidity ^0.8.0;
-
-interface IATokenMainnetInstanceGHO {
-  /**
-   * @notice Resolves the facilitator by burning the specified amount of underlying GHO tokens.
-   * @dev This function can be called only once because `UpgradePayload` will remove
-   *      this contract as a facilitator from the GHO token.
-   * @param amount The amount of underlying GHO tokens to burn.
-   */
-  function resolveFacilitator(uint256 amount) external;
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IAaveOracle.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IAaveOracle.sol
deleted file mode 100644
index f7d85b7..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IAaveOracle.sol
+++ /dev/null
@@ -1,71 +0,0 @@
-// SPDX-License-Identifier: MIT
-pragma solidity ^0.8.0;
-
-import {IPriceOracleGetter} from "./IPriceOracleGetter.sol";
-import {IPoolAddressesProvider} from "./IPoolAddressesProvider.sol";
-
-/**
- * @title IAaveOracle
- * @author Aave
- * @notice Defines the basic interface for the Aave Oracle
- */
-interface IAaveOracle is IPriceOracleGetter {
-  /**
-   * @dev Emitted after the base currency is set
-   * @param baseCurrency The base currency of used for price quotes
-   * @param baseCurrencyUnit The unit of the base currency
-   */
-  event BaseCurrencySet(address indexed baseCurrency, uint256 baseCurrencyUnit);
-
-  /**
-   * @dev Emitted after the price source of an asset is updated
-   * @param asset The address of the asset
-   * @param source The price source of the asset
-   */
-  event AssetSourceUpdated(address indexed asset, address indexed source);
-
-  /**
-   * @dev Emitted after the address of fallback oracle is updated
-   * @param fallbackOracle The address of the fallback oracle
-   */
-  event FallbackOracleUpdated(address indexed fallbackOracle);
-
-  /**
-   * @notice Returns the PoolAddressesProvider
-   * @return The address of the PoolAddressesProvider contract
-   */
-  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);
-
-  /**
-   * @notice Sets or replaces price sources of assets
-   * @param assets The addresses of the assets
-   * @param sources The addresses of the price sources
-   */
-  function setAssetSources(address[] calldata assets, address[] calldata sources) external;
-
-  /**
-   * @notice Sets the fallback oracle
-   * @param fallbackOracle The address of the fallback oracle
-   */
-  function setFallbackOracle(address fallbackOracle) external;
-
-  /**
-   * @notice Returns a list of prices from a list of assets addresses
-   * @param assets The list of assets addresses
-   * @return The prices of the given assets
-   */
-  function getAssetsPrices(address[] calldata assets) external view returns (uint256[] memory);
-
-  /**
-   * @notice Returns the address of the source for an asset address
-   * @param asset The address of the asset
-   * @return The address of the source
-   */
-  function getSourceOfAsset(address asset) external view returns (address);
-
-  /**
-   * @notice Returns the address of the fallback oracle
-   * @return The address of the fallback oracle
-   */
-  function getFallbackOracle() external view returns (address);
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IAccessControl.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IAccessControl.sol
deleted file mode 100644
index f70d8cc..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IAccessControl.sol
+++ /dev/null
@@ -1,98 +0,0 @@
-// SPDX-License-Identifier: MIT
-// OpenZeppelin Contracts (last updated v5.1.0) (access/IAccessControl.sol)
-
-pragma solidity ^0.8.20;
-
-/**
- * @dev External interface of AccessControl declared to support ERC-165 detection.
- */
-interface IAccessControl {
-  /**
-   * @dev The `account` is missing a role.
-   */
-  error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);
-
-  /**
-   * @dev The caller of a function is not the expected one.
-   *
-   * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.
-   */
-  error AccessControlBadConfirmation();
-
-  /**
-   * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`
-   *
-   * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite
-   * {RoleAdminChanged} not being emitted signaling this.
-   */
-  event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);
-
-  /**
-   * @dev Emitted when `account` is granted `role`.
-   *
-   * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).
-   * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.
-   */
-  event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);
-
-  /**
-   * @dev Emitted when `account` is revoked `role`.
-   *
-   * `sender` is the account that originated the contract call:
-   *   - if using `revokeRole`, it is the admin role bearer
-   *   - if using `renounceRole`, it is the role bearer (i.e. `account`)
-   */
-  event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);
-
-  /**
-   * @dev Returns `true` if `account` has been granted `role`.
-   */
-  function hasRole(bytes32 role, address account) external view returns (bool);
-
-  /**
-   * @dev Returns the admin role that controls `role`. See {grantRole} and
-   * {revokeRole}.
-   *
-   * To change a role's admin, use {AccessControl-_setRoleAdmin}.
-   */
-  function getRoleAdmin(bytes32 role) external view returns (bytes32);
-
-  /**
-   * @dev Grants `role` to `account`.
-   *
-   * If `account` had not been already granted `role`, emits a {RoleGranted}
-   * event.
-   *
-   * Requirements:
-   *
-   * - the caller must have ``role``'s admin role.
-   */
-  function grantRole(bytes32 role, address account) external;
-
-  /**
-   * @dev Revokes `role` from `account`.
-   *
-   * If `account` had been granted `role`, emits a {RoleRevoked} event.
-   *
-   * Requirements:
-   *
-   * - the caller must have ``role``'s admin role.
-   */
-  function revokeRole(bytes32 role, address account) external;
-
-  /**
-   * @dev Revokes `role` from the calling account.
-   *
-   * Roles are often managed via {grantRole} and {revokeRole}: this function's
-   * purpose is to provide a mechanism for accounts to lose their privileges
-   * if they are compromised (such as when a trusted device is misplaced).
-   *
-   * If the calling account had been granted `role`, emits a {RoleRevoked}
-   * event.
-   *
-   * Requirements:
-   *
-   * - the caller must be `callerConfirmation`.
-   */
-  function renounceRole(bytes32 role, address callerConfirmation) external;
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ICollector.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ICollector.sol
deleted file mode 100644
index ae858b3..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ICollector.sol
+++ /dev/null
@@ -1,219 +0,0 @@
-// SPDX-License-Identifier: MIT
-pragma solidity ^0.8.0;
-
-import {IERC20} from "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol";
-
-interface ICollector {
-  struct Stream {
-    uint256 deposit;
-    uint256 ratePerSecond;
-    uint256 remainingBalance;
-    uint256 startTime;
-    uint256 stopTime;
-    address recipient;
-    address sender;
-    address tokenAddress;
-    bool isEntity;
-  }
-
-  /**
-   * @dev Withdraw amount exceeds available balance
-   */
-  error BalanceExceeded();
-
-  /**
-   * @dev Deposit smaller than time delta
-   */
-  error DepositSmallerTimeDelta();
-
-  /**
-   * @dev Deposit not multiple of time delta
-   */
-  error DepositNotMultipleTimeDelta();
-
-  /**
-   * @dev Recipient cannot be the contract itself or msg.sender
-   */
-  error InvalidRecipient();
-
-  /**
-   * @dev Start time cannot be before block.timestamp
-   */
-  error InvalidStartTime();
-
-  /**
-   * @dev Stop time must be greater than startTime
-   */
-  error InvalidStopTime();
-
-  /**
-   * @dev Provided address cannot be the zero-address
-   */
-  error InvalidZeroAddress();
-
-  /**
-   * @dev Amount cannot be zero
-   */
-  error InvalidZeroAmount();
-
-  /**
-   * @dev Only caller with FUNDS_ADMIN role can call
-   */
-  error OnlyFundsAdmin();
-
-  /**
-   * @dev Only caller with FUNDS_ADMIN role or stream recipient can call
-   */
-  error OnlyFundsAdminOrRecipient();
-
-  /**
-   * @dev The provided ID does not belong to an existing stream
-   */
-  error StreamDoesNotExist();
-
-  /**
-   * @notice Emitted when the new stream is created
-   * @param streamId The identifier of the stream.
-   * @param sender The address of the collector.
-   * @param recipient The address towards which the money is streamed.
-   * @param deposit The amount of money to be streamed.
-   * @param tokenAddress The ERC20 token to use as streaming currency.
-   * @param startTime The unix timestamp for when the stream starts.
-   * @param stopTime The unix timestamp for when the stream stops.
-   *
-   */
-  event CreateStream(
-    uint256 indexed streamId,
-    address indexed sender,
-    address indexed recipient,
-    uint256 deposit,
-    address tokenAddress,
-    uint256 startTime,
-    uint256 stopTime
-  );
-
-  /**
-   * @notice Emmitted when withdraw happens from the contract to the recipient's account.
-   * @param streamId The id of the stream to withdraw tokens from.
-   * @param recipient The address towards which the money is streamed.
-   * @param amount The amount of tokens to withdraw.
-   */
-  event WithdrawFromStream(uint256 indexed streamId, address indexed recipient, uint256 amount);
-
-  /**
-   * @notice Emmitted when the stream is canceled.
-   * @param streamId The id of the stream to withdraw tokens from.
-   * @param sender The address of the collector.
-   * @param recipient The address towards which the money is streamed.
-   * @param senderBalance The sender's balance at the moment of cancelling.
-   * @param recipientBalance The recipient's balance at the moment of cancelling.
-   */
-  event CancelStream(
-    uint256 indexed streamId,
-    address indexed sender,
-    address indexed recipient,
-    uint256 senderBalance,
-    uint256 recipientBalance
-  );
-
-  /**
-   * @notice FUNDS_ADMIN role granted by ACL Manager
-   *
-   */
-  function FUNDS_ADMIN_ROLE() external view returns (bytes32);
-
-  /**
-   * @notice Returns the mock ETH reference address
-   * @return address The address
-   *
-   */
-  function ETH_MOCK_ADDRESS() external pure returns (address);
-
-  /**
-   * @notice Checks if address is funds admin
-   * @return bool If the address has the funds admin role
-   *
-   */
-  function isFundsAdmin(address admin) external view returns (bool);
-
-  /**
-   * @notice Returns the available funds for the given stream id and address.
-   * @param streamId The id of the stream for which to query the balance.
-   * @param who The address for which to query the balance.
-   * @notice Returns the total funds allocated to `who` as uint256.
-   *
-   */
-  function balanceOf(uint256 streamId, address who) external view returns (uint256 balance);
-
-  /**
-   * @dev Function for the funds admin to give ERC20 allowance to other parties
-   * @param token The address of the token to give allowance from
-   * @param recipient Allowance's recipient
-   * @param amount Allowance to approve
-   *
-   */
-  function approve(IERC20 token, address recipient, uint256 amount) external;
-
-  /**
-   * @notice Function for the funds admin to transfer ERC20 tokens to other parties
-   * @param token The address of the token to transfer
-   * @param recipient Transfer's recipient
-   * @param amount Amount to transfer
-   *
-   */
-  function transfer(IERC20 token, address recipient, uint256 amount) external;
-
-  /**
-   * @notice Creates a new stream funded by this contracts itself and paid towards `recipient`.
-   * @param recipient The address towards which the money is streamed.
-   * @param deposit The amount of money to be streamed.
-   * @param tokenAddress The ERC20 token to use as streaming currency.
-   * @param startTime The unix timestamp for when the stream starts.
-   * @param stopTime The unix timestamp for when the stream stops.
-   * @return streamId the uint256 id of the newly created stream.
-   */
-  function createStream(address recipient, uint256 deposit, address tokenAddress, uint256 startTime, uint256 stopTime)
-    external
-    returns (uint256 streamId);
-
-  /**
-   * @notice Returns the stream with all its properties.
-   * @dev Throws if the id does not point to a valid stream.
-   * @param streamId The id of the stream to query.
-   * @notice Returns the stream object.
-   */
-  function getStream(uint256 streamId)
-    external
-    view
-    returns (
-      address sender,
-      address recipient,
-      uint256 deposit,
-      address tokenAddress,
-      uint256 startTime,
-      uint256 stopTime,
-      uint256 remainingBalance,
-      uint256 ratePerSecond
-    );
-
-  /**
-   * @notice Withdraws from the contract to the recipient's account.
-   * @param streamId The id of the stream to withdraw tokens from.
-   * @param amount The amount of tokens to withdraw.
-   * @return bool Returns true if successful.
-   */
-  function withdrawFromStream(uint256 streamId, uint256 amount) external returns (bool);
-
-  /**
-   * @notice Cancels the stream and transfers the tokens back on a pro rata basis.
-   * @param streamId The id of the stream to cancel.
-   * @return bool Returns true if successful.
-   */
-  function cancelStream(uint256 streamId) external returns (bool);
-
-  /**
-   * @notice Returns the next available stream id
-   * @return nextStreamId Returns the stream id.
-   */
-  function getNextStreamId() external view returns (uint256);
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IDefaultInterestRateStrategyV2.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IDefaultInterestRateStrategyV2.sol
deleted file mode 100644
index c7f0796..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IDefaultInterestRateStrategyV2.sol
+++ /dev/null
@@ -1,161 +0,0 @@
-// SPDX-License-Identifier: MIT
-pragma solidity ^0.8.0;
-
-import {IReserveInterestRateStrategy} from "./IReserveInterestRateStrategy.sol";
-import {IPoolAddressesProvider} from "./IPoolAddressesProvider.sol";
-
-/**
- * @title IDefaultInterestRateStrategyV2
- * @author BGD Labs
- * @notice Interface of the default interest rate strategy used by the Aave protocol
- */
-interface IDefaultInterestRateStrategyV2 is IReserveInterestRateStrategy {
-  /**
-   * @notice Holds the interest rate data for a given reserve
-   *
-   * @dev Since values are in bps, they are multiplied by 1e23 in order to become rays with 27 decimals. This
-   * in turn means that the maximum supported interest rate is 4294967295 (2**32-1) bps or 42949672.95%.
-   *
-   * @param optimalUsageRatio The optimal usage ratio, in bps
-   * @param baseVariableBorrowRate The base variable borrow rate, in bps
-   * @param variableRateSlope1 The slope of the variable interest curve, before hitting the optimal ratio, in bps
-   * @param variableRateSlope2 The slope of the variable interest curve, after hitting the optimal ratio, in bps
-   */
-  struct InterestRateData {
-    uint16 optimalUsageRatio;
-    uint32 baseVariableBorrowRate;
-    uint32 variableRateSlope1;
-    uint32 variableRateSlope2;
-  }
-
-  /**
-   * @notice The interest rate data, where all values are in ray (fixed-point 27 decimal numbers) for a given reserve,
-   * used in in-memory calculations.
-   *
-   * @param optimalUsageRatio The optimal usage ratio
-   * @param baseVariableBorrowRate The base variable borrow rate
-   * @param variableRateSlope1 The slope of the variable interest curve, before hitting the optimal ratio
-   * @param variableRateSlope2 The slope of the variable interest curve, after hitting the optimal ratio
-   */
-  struct InterestRateDataRay {
-    uint256 optimalUsageRatio;
-    uint256 baseVariableBorrowRate;
-    uint256 variableRateSlope1;
-    uint256 variableRateSlope2;
-  }
-
-  /**
-   * @notice emitted when new interest rate data is set in a reserve
-   *
-   * @param reserve address of the reserve that has new interest rate data set
-   * @param optimalUsageRatio The optimal usage ratio, in bps
-   * @param baseVariableBorrowRate The base variable borrow rate, in bps
-   * @param variableRateSlope1 The slope of the variable interest curve, before hitting the optimal ratio, in bps
-   * @param variableRateSlope2 The slope of the variable interest curve, after hitting the optimal ratio, in bps
-   */
-  event RateDataUpdate(
-    address indexed reserve,
-    uint256 optimalUsageRatio,
-    uint256 baseVariableBorrowRate,
-    uint256 variableRateSlope1,
-    uint256 variableRateSlope2
-  );
-
-  /**
-   * @notice Returns the address of the PoolAddressesProvider
-   * @return The address of the PoolAddressesProvider contract
-   */
-  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);
-
-  /**
-   * @notice Returns the maximum value achievable for variable borrow rate, in bps
-   * @return The maximum rate
-   */
-  function MAX_BORROW_RATE() external view returns (uint256);
-
-  /**
-   * @notice Returns the minimum optimal point, in bps
-   * @return The optimal point
-   */
-  function MIN_OPTIMAL_POINT() external view returns (uint256);
-
-  /**
-   * @notice Returns the maximum optimal point, in bps
-   * @return The optimal point
-   */
-  function MAX_OPTIMAL_POINT() external view returns (uint256);
-
-  /**
-   * notice Returns the full InterestRateData object for the given reserve, in ray
-   *
-   * @param reserve The reserve to get the data of
-   *
-   * @return The InterestRateDataRay object for the given reserve
-   */
-  function getInterestRateData(address reserve) external view returns (InterestRateDataRay memory);
-
-  /**
-   * notice Returns the full InterestRateDataRay object for the given reserve, in bps
-   *
-   * @param reserve The reserve to get the data of
-   *
-   * @return The InterestRateData object for the given reserve
-   */
-  function getInterestRateDataBps(address reserve) external view returns (InterestRateData memory);
-
-  /**
-   * @notice Returns the optimal usage rate for the given reserve in ray
-   *
-   * @param reserve The reserve to get the optimal usage rate of
-   *
-   * @return The optimal usage rate is the level of borrow / collateral at which the borrow rate
-   */
-  function getOptimalUsageRatio(address reserve) external view returns (uint256);
-
-  /**
-   * @notice Returns the variable rate slope below optimal usage ratio in ray
-   * @dev It's the variable rate when usage ratio > 0 and <= OPTIMAL_USAGE_RATIO
-   *
-   * @param reserve The reserve to get the variable rate slope 1 of
-   *
-   * @return The variable rate slope
-   */
-  function getVariableRateSlope1(address reserve) external view returns (uint256);
-
-  /**
-   * @notice Returns the variable rate slope above optimal usage ratio in ray
-   * @dev It's the variable rate when usage ratio > OPTIMAL_USAGE_RATIO
-   *
-   * @param reserve The reserve to get the variable rate slope 2 of
-   *
-   * @return The variable rate slope
-   */
-  function getVariableRateSlope2(address reserve) external view returns (uint256);
-
-  /**
-   * @notice Returns the base variable borrow rate, in ray
-   *
-   * @param reserve The reserve to get the base variable borrow rate of
-   *
-   * @return The base variable borrow rate
-   */
-  function getBaseVariableBorrowRate(address reserve) external view returns (uint256);
-
-  /**
-   * @notice Returns the maximum variable borrow rate, in ray
-   *
-   * @param reserve The reserve to get the maximum variable borrow rate of
-   *
-   * @return The maximum variable borrow rate
-   */
-  function getMaxVariableBorrowRate(address reserve) external view returns (uint256);
-
-  /**
-   * @notice Sets interest rate data for an Aave rate strategy
-   * @param reserve The reserve to update
-   * @param rateData The reserve interest rate data to apply to the given reserve
-   *   Being specific to this custom implementation, with custom struct type,
-   *   overloading the function on the generic interface
-   */
-  function setInterestRateParams(address reserve, InterestRateData calldata rateData) external;
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IERC20.sol b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/IERC20.sol
index 1eaa4ac..0554ac2 100644
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IERC20.sol
+++ b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/IERC20.sol
@@ -1,44 +1,28 @@
 // SPDX-License-Identifier: MIT
-// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)
-
-pragma solidity ^0.8.20;
+pragma solidity ^0.8.0;
 
 /**
- * @dev Interface of the ERC-20 standard as defined in the ERC.
+ * @dev Interface of the ERC20 standard as defined in the EIP.
  */
 interface IERC20 {
   /**
-   * @dev Emitted when `value` tokens are moved from one account (`from`) to
-   * another (`to`).
-   *
-   * Note that `value` may be zero.
-   */
-  event Transfer(address indexed from, address indexed to, uint256 value);
-
-  /**
-   * @dev Emitted when the allowance of a `spender` for an `owner` is set by
-   * a call to {approve}. `value` is the new allowance.
-   */
-  event Approval(address indexed owner, address indexed spender, uint256 value);
-
-  /**
-   * @dev Returns the value of tokens in existence.
+   * @dev Returns the amount of tokens in existence.
    */
   function totalSupply() external view returns (uint256);
 
   /**
-   * @dev Returns the value of tokens owned by `account`.
+   * @dev Returns the amount of tokens owned by `account`.
    */
   function balanceOf(address account) external view returns (uint256);
 
   /**
-   * @dev Moves a `value` amount of tokens from the caller's account to `to`.
+   * @dev Moves `amount` tokens from the caller's account to `recipient`.
    *
    * Returns a boolean value indicating whether the operation succeeded.
    *
    * Emits a {Transfer} event.
    */
-  function transfer(address to, uint256 value) external returns (bool);
+  function transfer(address recipient, uint256 amount) external returns (bool);
 
   /**
    * @dev Returns the remaining number of tokens that `spender` will be
@@ -50,8 +34,7 @@ interface IERC20 {
   function allowance(address owner, address spender) external view returns (uint256);
 
   /**
-   * @dev Sets a `value` amount of tokens as the allowance of `spender` over the
-   * caller's tokens.
+   * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.
    *
    * Returns a boolean value indicating whether the operation succeeded.
    *
@@ -64,16 +47,30 @@ interface IERC20 {
    *
    * Emits an {Approval} event.
    */
-  function approve(address spender, uint256 value) external returns (bool);
+  function approve(address spender, uint256 amount) external returns (bool);
 
   /**
-   * @dev Moves a `value` amount of tokens from `from` to `to` using the
-   * allowance mechanism. `value` is then deducted from the caller's
+   * @dev Moves `amount` tokens from `sender` to `recipient` using the
+   * allowance mechanism. `amount` is then deducted from the caller's
    * allowance.
    *
    * Returns a boolean value indicating whether the operation succeeded.
    *
    * Emits a {Transfer} event.
    */
-  function transferFrom(address from, address to, uint256 value) external returns (bool);
+  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);
+
+  /**
+   * @dev Emitted when `value` tokens are moved from one account (`from`) to
+   * another (`to`).
+   *
+   * Note that `value` may be zero.
+   */
+  event Transfer(address indexed from, address indexed to, uint256 value);
+
+  /**
+   * @dev Emitted when the allowance of a `spender` for an `owner` is set by
+   * a call to {approve}. `value` is the new allowance.
+   */
+  event Approval(address indexed owner, address indexed spender, uint256 value);
 }
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IGhoToken.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IGhoToken.sol
deleted file mode 100644
index 7a9c13d..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IGhoToken.sol
+++ /dev/null
@@ -1,88 +0,0 @@
-// SPDX-License-Identifier: MIT
-pragma solidity ^0.8.0;
-
-import {IERC20} from "openzeppelin-contracts/contracts/token/ERC20/IERC20.sol";
-import {IAccessControl} from "openzeppelin-contracts/contracts/access/IAccessControl.sol";
-
-interface IGhoToken is IERC20, IAccessControl {
-  struct Facilitator {
-    uint128 bucketCapacity;
-    uint128 bucketLevel;
-    string label;
-  }
-
-  /**
-   * @notice Returns the identifier of the Facilitator Manager Role
-   * @return The bytes32 id hash of the FacilitatorManager role
-   */
-  function FACILITATOR_MANAGER_ROLE() external pure returns (bytes32);
-
-  /**
-   * @notice Returns the identifier of the Bucket Manager Role
-   * @return The bytes32 id hash of the BucketManager role
-   */
-  function BUCKET_MANAGER_ROLE() external pure returns (bytes32);
-
-  /**
-   * @notice Mints the requested amount of tokens to the account address.
-   * @dev Only facilitators with enough bucket capacity available can mint.
-   * @dev The bucket level is increased upon minting.
-   * @param account The address receiving the GHO tokens
-   * @param amount The amount to mint
-   */
-  function mint(address account, uint256 amount) external;
-
-  /**
-   * @notice Burns the requested amount of tokens from the account address.
-   * @dev Only active facilitators (bucket level > 0) can burn.
-   * @dev The bucket level is decreased upon burning.
-   * @param amount The amount to burn
-   */
-  function burn(uint256 amount) external;
-
-  /**
-   * @notice Add the facilitator passed with the parameters to the facilitators list.
-   * @dev Only accounts with `FACILITATOR_MANAGER_ROLE` role can call this function
-   * @param facilitatorAddress The address of the facilitator to add
-   * @param facilitatorLabel A human readable identifier for the facilitator
-   * @param bucketCapacity The upward limit of GHO can be minted by the facilitator
-   */
-  function addFacilitator(address facilitatorAddress, string calldata facilitatorLabel, uint128 bucketCapacity)
-    external;
-
-  /**
-   * @notice Remove the facilitator from the facilitators list.
-   * @dev Only accounts with `FACILITATOR_MANAGER_ROLE` role can call this function
-   * @param facilitatorAddress The address of the facilitator to remove
-   */
-  function removeFacilitator(address facilitatorAddress) external;
-
-  /**
-   * @notice Set the bucket capacity of the facilitator.
-   * @dev Only accounts with `BUCKET_MANAGER_ROLE` role can call this function
-   * @param facilitator The address of the facilitator
-   * @param newCapacity The new capacity of the bucket
-   */
-  function setFacilitatorBucketCapacity(address facilitator, uint128 newCapacity) external;
-
-  /**
-   * @notice Returns the facilitator data
-   * @param facilitator The address of the facilitator
-   * @return The facilitator configuration
-   */
-  function getFacilitator(address facilitator) external view returns (Facilitator memory);
-
-  /**
-   * @notice Returns the bucket configuration of the facilitator
-   * @param facilitator The address of the facilitator
-   * @return The capacity of the facilitator's bucket
-   * @return The level of the facilitator's bucket
-   */
-  function getFacilitatorBucket(address facilitator) external view returns (uint256, uint256);
-
-  /**
-   * @notice Returns the list of the addresses of the active facilitator
-   * @return The list of the facilitators addresses
-   */
-  function getFacilitatorsList() external view returns (address[] memory);
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IPool.sol b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/IPool.sol
index 38aad59..2320fbc 100644
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IPool.sol
+++ b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/IPool.sol
@@ -504,17 +504,17 @@ interface IPool {
    * @param asset The address of the underlying asset of the aToken
    * @param from The user from which the aTokens are transferred
    * @param to The user receiving the aTokens
-   * @param amount The amount being transferred/withdrawn
-   * @param balanceFromBefore The aToken balance of the `from` user before the transfer
-   * @param balanceToBefore The aToken balance of the `to` user before the transfer
+   * @param scaledAmount The scaled amount being transferred/withdrawn
+   * @param scaledBalanceFromBefore The aToken scaled balance of the `from` user before the transfer
+   * @param scaledBalanceToBefore The aToken scaled balance of the `to` user before the transfer
    */
   function finalizeTransfer(
     address asset,
     address from,
     address to,
-    uint256 amount,
-    uint256 balanceFromBefore,
-    uint256 balanceToBefore
+    uint256 scaledAmount,
+    uint256 scaledBalanceFromBefore,
+    uint256 scaledBalanceToBefore
   ) external;
 
   /**
@@ -709,8 +709,9 @@ interface IPool {
    * @dev The deficit of a reserve can occur due to situations where borrowed assets are not repaid, leading to bad debt.
    * @param asset The address of the underlying asset to cover the deficit.
    * @param amount The amount to be covered, in aToken
+   * @return The amount of tokens burned
    */
-  function eliminateReserveDeficit(address asset, uint256 amount) external;
+  function eliminateReserveDeficit(address asset, uint256 amount) external returns (uint256);
 
   /**
    * @notice Approves or disapproves a position manager. This position manager will be able
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IPoolConfigurator.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IPoolConfigurator.sol
deleted file mode 100644
index 0a94778..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IPoolConfigurator.sol
+++ /dev/null
@@ -1,476 +0,0 @@
-// SPDX-License-Identifier: MIT
-pragma solidity ^0.8.0;
-
-import {ConfiguratorInputTypes} from "../protocol/libraries/types/ConfiguratorInputTypes.sol";
-import {IDefaultInterestRateStrategyV2} from "./IDefaultInterestRateStrategyV2.sol";
-
-/**
- * @title IPoolConfigurator
- * @author Aave
- * @notice Defines the basic interface for a Pool configurator.
- */
-interface IPoolConfigurator {
-  /**
-   * @dev Emitted when a reserve is initialized.
-   * @param asset The address of the underlying asset of the reserve
-   * @param aToken The address of the associated aToken contract
-   * @param stableDebtToken, DEPRECATED in v3.2.0
-   * @param variableDebtToken The address of the associated variable rate debt token
-   * @param interestRateStrategyAddress The address of the interest rate strategy for the reserve
-   */
-  event ReserveInitialized(
-    address indexed asset,
-    address indexed aToken,
-    address stableDebtToken,
-    address variableDebtToken,
-    address interestRateStrategyAddress
-  );
-
-  /**
-   * @dev Emitted when borrowing is enabled or disabled on a reserve.
-   * @param asset The address of the underlying asset of the reserve
-   * @param enabled True if borrowing is enabled, false otherwise
-   */
-  event ReserveBorrowing(address indexed asset, bool enabled);
-
-  /**
-   * @dev Emitted when flashloans are enabled or disabled on a reserve.
-   * @param asset The address of the underlying asset of the reserve
-   * @param enabled True if flashloans are enabled, false otherwise
-   */
-  event ReserveFlashLoaning(address indexed asset, bool enabled);
-
-  /**
-   * @dev Emitted when the ltv is set for the frozen asset.
-   * @param asset The address of the underlying asset of the reserve
-   * @param ltv The loan to value of the asset when used as collateral
-   */
-  event PendingLtvChanged(address indexed asset, uint256 ltv);
-
-  /**
-   * @dev Emitted when the collateralization risk parameters for the specified asset are updated.
-   * @param asset The address of the underlying asset of the reserve
-   * @param ltv The loan to value of the asset when used as collateral
-   * @param liquidationThreshold The threshold at which loans using this asset as collateral will be considered undercollateralized
-   * @param liquidationBonus The bonus liquidators receive to liquidate this asset
-   */
-  event CollateralConfigurationChanged(
-    address indexed asset, uint256 ltv, uint256 liquidationThreshold, uint256 liquidationBonus
-  );
-
-  /**
-   * @dev Emitted when a reserve is activated or deactivated
-   * @param asset The address of the underlying asset of the reserve
-   * @param active True if reserve is active, false otherwise
-   */
-  event ReserveActive(address indexed asset, bool active);
-
-  /**
-   * @dev Emitted when a reserve is frozen or unfrozen
-   * @param asset The address of the underlying asset of the reserve
-   * @param frozen True if reserve is frozen, false otherwise
-   */
-  event ReserveFrozen(address indexed asset, bool frozen);
-
-  /**
-   * @dev Emitted when a reserve is paused or unpaused
-   * @param asset The address of the underlying asset of the reserve
-   * @param paused True if reserve is paused, false otherwise
-   */
-  event ReservePaused(address indexed asset, bool paused);
-
-  /**
-   * @dev Emitted when a reserve is dropped.
-   * @param asset The address of the underlying asset of the reserve
-   */
-  event ReserveDropped(address indexed asset);
-
-  /**
-   * @dev Emitted when a reserve factor is updated.
-   * @param asset The address of the underlying asset of the reserve
-   * @param oldReserveFactor The old reserve factor, expressed in bps
-   * @param newReserveFactor The new reserve factor, expressed in bps
-   */
-  event ReserveFactorChanged(address indexed asset, uint256 oldReserveFactor, uint256 newReserveFactor);
-
-  /**
-   * @dev Emitted when the borrow cap of a reserve is updated.
-   * @param asset The address of the underlying asset of the reserve
-   * @param oldBorrowCap The old borrow cap
-   * @param newBorrowCap The new borrow cap
-   */
-  event BorrowCapChanged(address indexed asset, uint256 oldBorrowCap, uint256 newBorrowCap);
-
-  /**
-   * @dev Emitted when the supply cap of a reserve is updated.
-   * @param asset The address of the underlying asset of the reserve
-   * @param oldSupplyCap The old supply cap
-   * @param newSupplyCap The new supply cap
-   */
-  event SupplyCapChanged(address indexed asset, uint256 oldSupplyCap, uint256 newSupplyCap);
-
-  /**
-   * @dev Emitted when the liquidation protocol fee of a reserve is updated.
-   * @param asset The address of the underlying asset of the reserve
-   * @param oldFee The old liquidation protocol fee, expressed in bps
-   * @param newFee The new liquidation protocol fee, expressed in bps
-   */
-  event LiquidationProtocolFeeChanged(address indexed asset, uint256 oldFee, uint256 newFee);
-
-  /**
-   * @dev Emitted when the liquidation grace period is updated.
-   * @param asset The address of the underlying asset of the reserve
-   * @param gracePeriodUntil Timestamp until when liquidations will not be allowed post-unpause
-   */
-  event LiquidationGracePeriodChanged(address indexed asset, uint40 gracePeriodUntil);
-
-  /**
-   * @dev Emitted when the liquidation grace period is disabled.
-   * @param asset The address of the underlying asset of the reserve
-   */
-  event LiquidationGracePeriodDisabled(address indexed asset);
-
-  /**
-   * @dev Emitted when an collateral configuration of an asset in an eMode is changed.
-   * @param asset The address of the underlying asset of the reserve
-   * @param categoryId The eMode category
-   * @param collateral True if the asset is enabled as collateral in the eMode, false otherwise.
-   */
-  event AssetCollateralInEModeChanged(address indexed asset, uint8 categoryId, bool collateral);
-
-  /**
-   * @dev Emitted when the borrowable configuration of an asset in an eMode changed.
-   * @param asset The address of the underlying asset of the reserve
-   * @param categoryId The eMode category
-   * @param borrowable True if the asset is enabled as borrowable in the eMode, false otherwise.
-   */
-  event AssetBorrowableInEModeChanged(address indexed asset, uint8 categoryId, bool borrowable);
-
-  /**
-   * @dev Emitted when a new eMode category is added or an existing category is altered.
-   * @param categoryId The new eMode category id
-   * @param ltv The ltv for the asset category in eMode
-   * @param liquidationThreshold The liquidationThreshold for the asset category in eMode
-   * @param liquidationBonus The liquidationBonus for the asset category in eMode
-   * @param oracle DEPRECATED in v3.2.0
-   * @param label A human readable identifier for the category
-   */
-  event EModeCategoryAdded(
-    uint8 indexed categoryId,
-    uint256 ltv,
-    uint256 liquidationThreshold,
-    uint256 liquidationBonus,
-    address oracle,
-    string label
-  );
-
-  /**
-   * @dev Emitted when a reserve interest strategy contract is updated.
-   * @param asset The address of the underlying asset of the reserve
-   * @param oldStrategy The address of the old interest strategy contract
-   * @param newStrategy The address of the new interest strategy contract
-   */
-  event ReserveInterestRateStrategyChanged(address indexed asset, address oldStrategy, address newStrategy);
-
-  /**
-   * @dev Emitted when the data of a reserve interest strategy contract is updated.
-   * @param asset The address of the underlying asset of the reserve
-   * @param data abi encoded data
-   */
-  event ReserveInterestRateDataChanged(address indexed asset, address indexed strategy, bytes data);
-
-  /**
-   * @dev Emitted when an aToken implementation is upgraded.
-   * @param asset The address of the underlying asset of the reserve
-   * @param proxy The aToken proxy address
-   * @param implementation The new aToken implementation
-   */
-  event ATokenUpgraded(address indexed asset, address indexed proxy, address indexed implementation);
-
-  /**
-   * @dev Emitted when the implementation of a variable debt token is upgraded.
-   * @param asset The address of the underlying asset of the reserve
-   * @param proxy The variable debt token proxy address
-   * @param implementation The new aToken implementation
-   */
-  event VariableDebtTokenUpgraded(address indexed asset, address indexed proxy, address indexed implementation);
-
-  /**
-   * @dev Emitted when the debt ceiling of an asset is set.
-   * @param asset The address of the underlying asset of the reserve
-   * @param oldDebtCeiling The old debt ceiling
-   * @param newDebtCeiling The new debt ceiling
-   */
-  event DebtCeilingChanged(address indexed asset, uint256 oldDebtCeiling, uint256 newDebtCeiling);
-
-  /**
-   * @dev Emitted when the the siloed borrowing state for an asset is changed.
-   * @param asset The address of the underlying asset of the reserve
-   * @param oldState The old siloed borrowing state
-   * @param newState The new siloed borrowing state
-   */
-  event SiloedBorrowingChanged(address indexed asset, bool oldState, bool newState);
-
-  /**
-   * @dev Emitted when the bridge protocol fee is updated.
-   * @param oldBridgeProtocolFee The old protocol fee, expressed in bps
-   * @param newBridgeProtocolFee The new protocol fee, expressed in bps
-   */
-  event BridgeProtocolFeeUpdated(uint256 oldBridgeProtocolFee, uint256 newBridgeProtocolFee);
-
-  /**
-   * @dev Emitted when the total premium on flashloans is updated.
-   * @param oldFlashloanPremiumTotal The old premium, expressed in bps
-   * @param newFlashloanPremiumTotal The new premium, expressed in bps
-   */
-  event FlashloanPremiumTotalUpdated(uint128 oldFlashloanPremiumTotal, uint128 newFlashloanPremiumTotal);
-
-  /**
-   * @dev Emitted when the part of the premium that goes to protocol is updated.
-   *         Deprecated, from the v3.4 version the `flashloanPremiumToProtocol` value
-   *         is always 100%.
-   * @param oldFlashloanPremiumToProtocol The old premium, expressed in bps
-   * @param newFlashloanPremiumToProtocol The new premium, expressed in bps
-   */
-  event FlashloanPremiumToProtocolUpdated(uint128 oldFlashloanPremiumToProtocol, uint128 newFlashloanPremiumToProtocol);
-
-  /**
-   * @dev Emitted when the reserve is set as borrowable/non borrowable in isolation mode.
-   * @param asset The address of the underlying asset of the reserve
-   * @param borrowable True if the reserve is borrowable in isolation, false otherwise
-   */
-  event BorrowableInIsolationChanged(address asset, bool borrowable);
-
-  /**
-   * @notice Initializes multiple reserves.
-   * @param input The array of initialization parameters
-   */
-  function initReserves(ConfiguratorInputTypes.InitReserveInput[] calldata input) external;
-
-  /**
-   * @dev Updates the aToken implementation for the reserve.
-   * @param input The aToken update parameters
-   */
-  function updateAToken(ConfiguratorInputTypes.UpdateATokenInput calldata input) external;
-
-  /**
-   * @notice Updates the variable debt token implementation for the asset.
-   * @param input The variableDebtToken update parameters
-   */
-  function updateVariableDebtToken(ConfiguratorInputTypes.UpdateDebtTokenInput calldata input) external;
-
-  /**
-   * @notice Configures borrowing on a reserve.
-   * @param asset The address of the underlying asset of the reserve
-   * @param enabled True if borrowing needs to be enabled, false otherwise
-   */
-  function setReserveBorrowing(address asset, bool enabled) external;
-
-  /**
-   * @notice Configures the reserve collateralization parameters.
-   * @dev All the values are expressed in bps. A value of 10000, results in 100.00%
-   * @dev The `liquidationBonus` is always above 100%. A value of 105% means the liquidator will receive a 5% bonus
-   * @param asset The address of the underlying asset of the reserve
-   * @param ltv The loan to value of the asset when used as collateral
-   * @param liquidationThreshold The threshold at which loans using this asset as collateral will be considered undercollateralized
-   * @param liquidationBonus The bonus liquidators receive to liquidate this asset
-   */
-  function configureReserveAsCollateral(
-    address asset,
-    uint256 ltv,
-    uint256 liquidationThreshold,
-    uint256 liquidationBonus
-  ) external;
-
-  /**
-   * @notice Enable or disable flashloans on a reserve
-   * @param asset The address of the underlying asset of the reserve
-   * @param enabled True if flashloans need to be enabled, false otherwise
-   */
-  function setReserveFlashLoaning(address asset, bool enabled) external;
-
-  /**
-   * @notice Activate or deactivate a reserve
-   * @param asset The address of the underlying asset of the reserve
-   * @param active True if the reserve needs to be active, false otherwise
-   */
-  function setReserveActive(address asset, bool active) external;
-
-  /**
-   * @notice Freeze or unfreeze a reserve. A frozen reserve doesn't allow any new supply, borrow
-   * or rate swap but allows repayments, liquidations, rate rebalances and withdrawals.
-   * @param asset The address of the underlying asset of the reserve
-   * @param freeze True if the reserve needs to be frozen, false otherwise
-   */
-  function setReserveFreeze(address asset, bool freeze) external;
-
-  /**
-   * @notice Sets the borrowable in isolation flag for the reserve.
-   * @dev When this flag is set to true, the asset will be borrowable against isolated collaterals and the
-   * borrowed amount will be accumulated in the isolated collateral's total debt exposure
-   * @dev Only assets of the same family (e.g. USD stablecoins) should be borrowable in isolation mode to keep
-   * consistency in the debt ceiling calculations
-   * @param asset The address of the underlying asset of the reserve
-   * @param borrowable True if the asset should be borrowable in isolation, false otherwise
-   */
-  function setBorrowableInIsolation(address asset, bool borrowable) external;
-
-  /**
-   * @notice Pauses a reserve. A paused reserve does not allow any interaction (supply, borrow, repay,
-   * swap interest rate, liquidate, atoken transfers).
-   * @param asset The address of the underlying asset of the reserve
-   * @param paused True if pausing the reserve, false if unpausing
-   * @param gracePeriod Count of seconds after unpause during which liquidations will not be available
-   *   - Only applicable whenever unpausing (`paused` as false)
-   *   - Passing 0 means no grace period
-   *   - Capped to maximum MAX_GRACE_PERIOD
-   */
-  function setReservePause(address asset, bool paused, uint40 gracePeriod) external;
-
-  /**
-   * @notice Pauses a reserve. A paused reserve does not allow any interaction (supply, borrow, repay,
-   * swap interest rate, liquidate, atoken transfers).
-   * @dev Version with no grace period
-   * @param asset The address of the underlying asset of the reserve
-   * @param paused True if pausing the reserve, false if unpausing
-   */
-  function setReservePause(address asset, bool paused) external;
-
-  /**
-   * @notice Disables liquidation grace period for the asset. The liquidation grace period is set in the past
-   * so that liquidations are allowed for the asset.
-   * @param asset The address of the underlying asset of the reserve
-   */
-  function disableLiquidationGracePeriod(address asset) external;
-
-  /**
-   * @notice Updates the reserve factor of a reserve.
-   * @param asset The address of the underlying asset of the reserve
-   * @param newReserveFactor The new reserve factor of the reserve
-   */
-  function setReserveFactor(address asset, uint256 newReserveFactor) external;
-
-  /**
-   * @notice Sets interest rate data for a reserve
-   * @param asset The address of the underlying asset of the reserve
-   * @param rateData bytes-encoded rate data. In this format in order to allow the rate strategy contract
-   *  to de-structure custom data
-   */
-  function setReserveInterestRateData(address asset, bytes calldata rateData) external;
-
-  /**
-   * @notice Pauses or unpauses all the protocol reserves. In the paused state all the protocol interactions
-   * are suspended.
-   * @param paused True if protocol needs to be paused, false otherwise
-   * @param gracePeriod Count of seconds after unpause during which liquidations will not be available
-   *   - Only applicable whenever unpausing (`paused` as false)
-   *   - Passing 0 means no grace period
-   *   - Capped to maximum MAX_GRACE_PERIOD
-   */
-  function setPoolPause(bool paused, uint40 gracePeriod) external;
-
-  /**
-   * @notice Pauses or unpauses all the protocol reserves. In the paused state all the protocol interactions
-   * are suspended.
-   * @dev Version with no grace period
-   * @param paused True if protocol needs to be paused, false otherwise
-   */
-  function setPoolPause(bool paused) external;
-
-  /**
-   * @notice Updates the borrow cap of a reserve.
-   * @param asset The address of the underlying asset of the reserve
-   * @param newBorrowCap The new borrow cap of the reserve
-   */
-  function setBorrowCap(address asset, uint256 newBorrowCap) external;
-
-  /**
-   * @notice Updates the supply cap of a reserve.
-   * @param asset The address of the underlying asset of the reserve
-   * @param newSupplyCap The new supply cap of the reserve
-   */
-  function setSupplyCap(address asset, uint256 newSupplyCap) external;
-
-  /**
-   * @notice Updates the liquidation protocol fee of reserve.
-   * @param asset The address of the underlying asset of the reserve
-   * @param newFee The new liquidation protocol fee of the reserve, expressed in bps
-   */
-  function setLiquidationProtocolFee(address asset, uint256 newFee) external;
-
-  /**
-   * @notice Enables/disables an asset to be borrowable in a selected eMode.
-   * - eMode.borrowable always has less priority then reserve.borrowable
-   * @param asset The address of the underlying asset of the reserve
-   * @param categoryId The eMode categoryId
-   * @param borrowable True if the asset should be borrowable in the given eMode category, false otherwise.
-   */
-  function setAssetBorrowableInEMode(address asset, uint8 categoryId, bool borrowable) external;
-
-  /**
-   * @notice Enables/disables an asset to be collateral in a selected eMode.
-   * @param asset The address of the underlying asset of the reserve
-   * @param categoryId The eMode categoryId
-   * @param collateral True if the asset should be collateral in the given eMode category, false otherwise.
-   */
-  function setAssetCollateralInEMode(address asset, uint8 categoryId, bool collateral) external;
-
-  /**
-   * @notice Adds a new efficiency mode (eMode) category or alters a existing one.
-   * @param categoryId The id of the category to be configured
-   * @param ltv The ltv associated with the category
-   * @param liquidationThreshold The liquidation threshold associated with the category
-   * @param liquidationBonus The liquidation bonus associated with the category
-   * @param label A label identifying the category
-   */
-  function setEModeCategory(
-    uint8 categoryId,
-    uint16 ltv,
-    uint16 liquidationThreshold,
-    uint16 liquidationBonus,
-    string calldata label
-  ) external;
-
-  /**
-   * @notice Drops a reserve entirely.
-   * @param asset The address of the reserve to drop
-   */
-  function dropReserve(address asset) external;
-
-  /**
-   * @notice Updates the flash loan premium. All this premium
-   *         will be collected by the treasury.
-   * @dev Expressed in bps
-   * @dev The premium is calculated on the total amount borrowed
-   * @param newFlashloanPremium The flashloan premium
-   */
-  function updateFlashloanPremium(uint128 newFlashloanPremium) external;
-
-  /**
-   * @notice Sets the debt ceiling for an asset.
-   * @param newDebtCeiling The new debt ceiling
-   */
-  function setDebtCeiling(address asset, uint256 newDebtCeiling) external;
-
-  /**
-   * @notice Sets siloed borrowing for an asset
-   * @param siloed The new siloed borrowing state
-   */
-  function setSiloedBorrowing(address asset, bool siloed) external;
-
-  /**
-   * @notice Gets pending ltv value
-   * @param asset The new siloed borrowing state
-   */
-  function getPendingLtv(address asset) external view returns (uint256);
-
-  /**
-   * @notice Gets the address of the external ConfiguratorLogic
-   */
-  function getConfiguratorLogic() external view returns (address);
-
-  /**
-   * @notice Gets the maximum liquidations grace period allowed, in seconds
-   */
-  function MAX_GRACE_PERIOD() external view returns (uint40);
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IPoolDataProvider.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IPoolDataProvider.sol
deleted file mode 100644
index fbb2df1..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IPoolDataProvider.sol
+++ /dev/null
@@ -1,247 +0,0 @@
-// SPDX-License-Identifier: MIT
-pragma solidity ^0.8.0;
-
-import {IPoolAddressesProvider} from "./IPoolAddressesProvider.sol";
-import {IPool} from "./IPool.sol";
-
-/**
- * @title IPoolDataProvider
- * @author Aave
- * @notice Defines the basic interface of a PoolDataProvider
- */
-interface IPoolDataProvider {
-  struct TokenData {
-    string symbol;
-    address tokenAddress;
-  }
-
-  /**
-   * @notice Returns the address for the PoolAddressesProvider contract.
-   * @return The address for the PoolAddressesProvider contract
-   */
-  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);
-
-  /**
-   * @notice Returns the address for the Pool contract.
-   * @return The address for the Pool contract
-   */
-  function POOL() external view returns (IPool);
-
-  /**
-   * @notice Returns the list of the existing reserves in the pool.
-   * @dev Handling MKR and ETH in a different way since they do not have standard `symbol` functions.
-   * @return The list of reserves, pairs of symbols and addresses
-   */
-  function getAllReservesTokens() external view returns (TokenData[] memory);
-
-  /**
-   * @notice Returns the list of the existing ATokens in the pool.
-   * @return The list of ATokens, pairs of symbols and addresses
-   */
-  function getAllATokens() external view returns (TokenData[] memory);
-
-  /**
-   * @notice Returns the configuration data of the reserve
-   * @dev Not returning borrow and supply caps for compatibility, nor pause flag
-   * @param asset The address of the underlying asset of the reserve
-   * @return decimals The number of decimals of the reserve
-   * @return ltv The ltv of the reserve
-   * @return liquidationThreshold The liquidationThreshold of the reserve
-   * @return liquidationBonus The liquidationBonus of the reserve
-   * @return reserveFactor The reserveFactor of the reserve
-   * @return usageAsCollateralEnabled True if the usage as collateral is enabled, false otherwise
-   * @return borrowingEnabled True if borrowing is enabled, false otherwise
-   * @return stableBorrowRateEnabled True if stable rate borrowing is enabled, false otherwise
-   * @return isActive True if it is active, false otherwise
-   * @return isFrozen True if it is frozen, false otherwise
-   */
-  function getReserveConfigurationData(address asset)
-    external
-    view
-    returns (
-      uint256 decimals,
-      uint256 ltv,
-      uint256 liquidationThreshold,
-      uint256 liquidationBonus,
-      uint256 reserveFactor,
-      bool usageAsCollateralEnabled,
-      bool borrowingEnabled,
-      bool stableBorrowRateEnabled,
-      bool isActive,
-      bool isFrozen
-    );
-
-  /**
-   * @notice Returns the caps parameters of the reserve
-   * @param asset The address of the underlying asset of the reserve
-   * @return borrowCap The borrow cap of the reserve
-   * @return supplyCap The supply cap of the reserve
-   */
-  function getReserveCaps(address asset) external view returns (uint256 borrowCap, uint256 supplyCap);
-
-  /**
-   * @notice Returns if the pool is paused
-   * @param asset The address of the underlying asset of the reserve
-   * @return isPaused True if the pool is paused, false otherwise
-   */
-  function getPaused(address asset) external view returns (bool isPaused);
-
-  /**
-   * @notice Returns the siloed borrowing flag
-   * @param asset The address of the underlying asset of the reserve
-   * @return True if the asset is siloed for borrowing
-   */
-  function getSiloedBorrowing(address asset) external view returns (bool);
-
-  /**
-   * @notice Returns the protocol fee on the liquidation bonus
-   * @param asset The address of the underlying asset of the reserve
-   * @return The protocol fee on liquidation
-   */
-  function getLiquidationProtocolFee(address asset) external view returns (uint256);
-
-  /**
-   * @notice Returns the unbacked mint cap of the reserve
-   * @param asset The address of the underlying asset of the reserve
-   * @return 0, DEPRECATED in v3.4.0
-   */
-  function getUnbackedMintCap(address asset) external view returns (uint256);
-
-  /**
-   * @notice Returns the debt ceiling of the reserve
-   * @param asset The address of the underlying asset of the reserve
-   * @return The debt ceiling of the reserve
-   */
-  function getDebtCeiling(address asset) external view returns (uint256);
-
-  /**
-   * @notice Returns the debt ceiling decimals
-   * @return The debt ceiling decimals
-   */
-  function getDebtCeilingDecimals() external pure returns (uint256);
-
-  /**
-   * @notice Returns the reserve data
-   * @param asset The address of the underlying asset of the reserve
-   * @return unbacked The amount of unbacked tokens
-   * @return accruedToTreasuryScaled The scaled amount of tokens accrued to treasury that is to be minted
-   * @return totalAToken The total supply of the aToken
-   * @return totalStableDebt The total stable debt of the reserve
-   * @return totalVariableDebt The total variable debt of the reserve
-   * @return liquidityRate The liquidity rate of the reserve
-   * @return variableBorrowRate The variable borrow rate of the reserve
-   * @return stableBorrowRate The stable borrow rate of the reserve
-   * @return averageStableBorrowRate The average stable borrow rate of the reserve
-   * @return liquidityIndex The liquidity index of the reserve
-   * @return variableBorrowIndex The variable borrow index of the reserve
-   * @return lastUpdateTimestamp The timestamp of the last update of the reserve
-   */
-  function getReserveData(address asset)
-    external
-    view
-    returns (
-      uint256 unbacked,
-      uint256 accruedToTreasuryScaled,
-      uint256 totalAToken,
-      uint256 totalStableDebt,
-      uint256 totalVariableDebt,
-      uint256 liquidityRate,
-      uint256 variableBorrowRate,
-      uint256 stableBorrowRate,
-      uint256 averageStableBorrowRate,
-      uint256 liquidityIndex,
-      uint256 variableBorrowIndex,
-      uint40 lastUpdateTimestamp
-    );
-
-  /**
-   * @notice Returns the total supply of aTokens for a given asset
-   * @param asset The address of the underlying asset of the reserve
-   * @return The total supply of the aToken
-   */
-  function getATokenTotalSupply(address asset) external view returns (uint256);
-
-  /**
-   * @notice Returns the total debt for a given asset
-   * @param asset The address of the underlying asset of the reserve
-   * @return The total debt for asset
-   */
-  function getTotalDebt(address asset) external view returns (uint256);
-
-  /**
-   * @notice Returns the user data in a reserve
-   * @param asset The address of the underlying asset of the reserve
-   * @param user The address of the user
-   * @return currentATokenBalance The current AToken balance of the user
-   * @return currentStableDebt The current stable debt of the user
-   * @return currentVariableDebt The current variable debt of the user
-   * @return principalStableDebt The principal stable debt of the user
-   * @return scaledVariableDebt The scaled variable debt of the user
-   * @return stableBorrowRate The stable borrow rate of the user
-   * @return liquidityRate The liquidity rate of the reserve
-   * @return stableRateLastUpdated The timestamp of the last update of the user stable rate
-   * @return usageAsCollateralEnabled True if the user is using the asset as collateral, false
-   *         otherwise
-   */
-  function getUserReserveData(address asset, address user)
-    external
-    view
-    returns (
-      uint256 currentATokenBalance,
-      uint256 currentStableDebt,
-      uint256 currentVariableDebt,
-      uint256 principalStableDebt,
-      uint256 scaledVariableDebt,
-      uint256 stableBorrowRate,
-      uint256 liquidityRate,
-      uint40 stableRateLastUpdated,
-      bool usageAsCollateralEnabled
-    );
-
-  /**
-   * @notice Returns the token addresses of the reserve
-   * @param asset The address of the underlying asset of the reserve
-   * @return aTokenAddress The AToken address of the reserve
-   * @return stableDebtTokenAddress DEPRECATED in v3.2.0
-   * @return variableDebtTokenAddress The VariableDebtToken address of the reserve
-   */
-  function getReserveTokensAddresses(address asset)
-    external
-    view
-    returns (address aTokenAddress, address stableDebtTokenAddress, address variableDebtTokenAddress);
-
-  /**
-   * @notice Returns the address of the Interest Rate strategy
-   * @param asset The address of the underlying asset of the reserve
-   * @return irStrategyAddress The address of the Interest Rate strategy
-   */
-  function getInterestRateStrategyAddress(address asset) external view returns (address irStrategyAddress);
-
-  /**
-   * @notice Returns whether the reserve has FlashLoans enabled or disabled
-   * @param asset The address of the underlying asset of the reserve
-   * @return True if FlashLoans are enabled, false otherwise
-   */
-  function getFlashLoanEnabled(address asset) external view returns (bool);
-
-  /**
-   * @notice Returns whether virtual accounting is enabled/not for a reserve
-   * @param asset The address of the underlying asset of the reserve
-   * @return True, DEPRECATED in v3.4.0 as all reserves have virtual accounting set as active
-   */
-  function getIsVirtualAccActive(address asset) external view returns (bool);
-
-  /**
-   * @notice Returns the virtual underlying balance of the reserve
-   * @param asset The address of the underlying asset of the reserve
-   * @return The reserve virtual underlying balance
-   */
-  function getVirtualUnderlyingBalance(address asset) external view returns (uint256);
-
-  /**
-   * @notice Returns the deficit of the reserve
-   * @param asset The address of the underlying asset of the reserve
-   * @return The reserve deficit
-   */
-  function getReserveDeficit(address asset) external view returns (uint256);
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IPriceOracleGetter.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IPriceOracleGetter.sol
deleted file mode 100644
index 869851a..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IPriceOracleGetter.sol
+++ /dev/null
@@ -1,30 +0,0 @@
-// SPDX-License-Identifier: MIT
-pragma solidity ^0.8.0;
-
-/**
- * @title IPriceOracleGetter
- * @author Aave
- * @notice Interface for the Aave price oracle.
- */
-interface IPriceOracleGetter {
-  /**
-   * @notice Returns the base currency address
-   * @dev Address 0x0 is reserved for USD as base currency.
-   * @return Returns the base currency address.
-   */
-  function BASE_CURRENCY() external view returns (address);
-
-  /**
-   * @notice Returns the base currency unit
-   * @dev 1 ether for ETH, 1e8 for USD.
-   * @return Returns the base currency unit.
-   */
-  function BASE_CURRENCY_UNIT() external view returns (uint256);
-
-  /**
-   * @notice Returns the asset price in the base currency
-   * @param asset The address of the asset
-   * @return The price of the asset
-   */
-  function getAssetPrice(address asset) external view returns (uint256);
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IReserveInterestRateStrategy.sol b/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IReserveInterestRateStrategy.sol
deleted file mode 100644
index 9549f03..0000000
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IReserveInterestRateStrategy.sol
+++ /dev/null
@@ -1,30 +0,0 @@
-// SPDX-License-Identifier: MIT
-pragma solidity ^0.8.0;
-
-import {DataTypes} from "../protocol/libraries/types/DataTypes.sol";
-
-/**
- * @title IReserveInterestRateStrategy
- * @author BGD Labs
- * @notice Basic interface for any rate strategy used by the Aave protocol
- */
-interface IReserveInterestRateStrategy {
-  /**
-   * @notice Sets interest rate data for an Aave rate strategy
-   * @param reserve The reserve to update
-   * @param rateData The abi encoded reserve interest rate data to apply to the given reserve
-   *   Abstracted this way as rate strategies can be custom
-   */
-  function setInterestRateParams(address reserve, bytes calldata rateData) external;
-
-  /**
-   * @notice Calculates the interest rates depending on the reserve's state and configurations
-   * @param params The parameters needed to calculate interest rates
-   * @return liquidityRate The liquidity rate expressed in ray
-   * @return variableBorrowRate The variable borrow rate expressed in ray
-   */
-  function calculateInterestRates(DataTypes.CalculateInterestRatesParams memory params)
-    external
-    view
-    returns (uint256, uint256);
-}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IncentivizedERC20.sol b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/IncentivizedERC20.sol
index 4e18e31..478cefc 100644
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/IncentivizedERC20.sol
+++ b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/IncentivizedERC20.sol
@@ -22,6 +22,14 @@ abstract contract IncentivizedERC20 is Context, IERC20Detailed {
   using WadRayMath for uint256;
   using SafeCast for uint256;
 
+  /**
+   * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.
+   * @param spender Address that may be allowed to operate on tokens without being their owner.
+   * @param allowance Amount of tokens a `spender` is allowed to operate with.
+   * @param needed Minimum amount required to perform a transfer.
+   */
+  error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);
+
   /**
    * @dev Only pool admin can call functions marked by this modifier.
    */
@@ -168,6 +176,26 @@ abstract contract IncentivizedERC20 is Context, IERC20Detailed {
     return true;
   }
 
+  /**
+   * @dev Updates `owner`'s allowance for `spender` based on spent `value`.
+   *
+   * Revert if not enough allowance is available.
+   *
+   * @param owner The owner of the tokens
+   * @param spender The user allowed to spend on behalf of owner
+   * @param amount The minimum amount being consumed from the allowance
+   * @param correctedAmount The maximum amount being consumed from the allowance
+   */
+  function _spendAllowance(address owner, address spender, uint256 amount, uint256 correctedAmount) internal virtual {
+    uint256 currentAllowance = _allowances[owner][spender];
+    if (currentAllowance < amount) {
+      revert ERC20InsufficientAllowance(spender, currentAllowance, amount);
+    }
+
+    uint256 consumption = currentAllowance >= correctedAmount ? correctedAmount : currentAllowance;
+    _approve(owner, spender, currentAllowance - consumption);
+  }
+
   /**
    * @notice Transfers tokens between two users and apply incentives if defined.
    * @param sender The source address
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ScaledBalanceTokenBase.sol b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/ScaledBalanceTokenBase.sol
index 4d22caf..e5f2d8f 100644
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/ScaledBalanceTokenBase.sol
+++ b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/ScaledBalanceTokenBase.sol
@@ -55,22 +55,30 @@ abstract contract ScaledBalanceTokenBase is MintableIncentivizedERC20, IScaledBa
    * @notice Implements the basic logic to mint a scaled balance token.
    * @param caller The address performing the mint
    * @param onBehalfOf The address of the user that will receive the scaled tokens
-   * @param amount The amount of tokens getting minted
+   * @param amountScaled The amountScaled of tokens getting minted
    * @param index The next liquidity index of the reserve
+   * @param getTokenBalance The function to get the balance of the token
    * @return `true` if the the previous balance of the user was 0
    */
-  function _mintScaled(address caller, address onBehalfOf, uint256 amount, uint256 index) internal returns (bool) {
-    uint256 amountScaled = amount.rayDiv(index);
+  function _mintScaled(
+    address caller,
+    address onBehalfOf,
+    uint256 amountScaled,
+    uint256 index,
+    function(uint256, uint256) internal pure returns (uint256) getTokenBalance
+  ) internal returns (bool) {
     require(amountScaled != 0, Errors.InvalidMintAmount());
 
     uint256 scaledBalance = super.balanceOf(onBehalfOf);
-    uint256 balanceIncrease = scaledBalance.rayMul(index) - scaledBalance.rayMul(_userState[onBehalfOf].additionalData);
+    uint256 nextBalance = getTokenBalance(amountScaled + scaledBalance, index);
+    uint256 previousBalance = getTokenBalance(scaledBalance, _userState[onBehalfOf].additionalData);
+    uint256 balanceIncrease = getTokenBalance(scaledBalance, index) - previousBalance;
 
     _userState[onBehalfOf].additionalData = index.toUint128();
 
     _mint(onBehalfOf, amountScaled.toUint120());
 
-    uint256 amountToMint = amount + balanceIncrease;
+    uint256 amountToMint = nextBalance - previousBalance;
     emit Transfer(address(0), onBehalfOf, amountToMint);
     emit Mint(caller, onBehalfOf, amountToMint, balanceIncrease, index);
 
@@ -83,30 +91,39 @@ abstract contract ScaledBalanceTokenBase is MintableIncentivizedERC20, IScaledBa
    * if the amount to burn is less than the interest that the user accrued
    * @param user The user which debt is burnt
    * @param target The address that will receive the underlying, if any
-   * @param amount The amount getting burned
+   * @param amountScaled The scaled amount getting burned
    * @param index The variable debt index of the reserve
+   * @param getTokenBalance The function to get the balance of the token
    * @return `true` if the the new balance of the user is 0
    */
-  function _burnScaled(address user, address target, uint256 amount, uint256 index) internal returns (bool) {
-    uint256 amountScaled = amount.rayDiv(index);
+  function _burnScaled(
+    address user,
+    address target,
+    uint256 amountScaled,
+    uint256 index,
+    function(uint256, uint256) internal pure returns (uint256) getTokenBalance
+  ) internal returns (bool) {
     require(amountScaled != 0, Errors.InvalidBurnAmount());
 
     uint256 scaledBalance = super.balanceOf(user);
-    uint256 balanceIncrease = scaledBalance.rayMul(index) - scaledBalance.rayMul(_userState[user].additionalData);
+    uint256 nextBalance = getTokenBalance(scaledBalance - amountScaled, index);
+    uint256 previousBalance = getTokenBalance(scaledBalance, _userState[user].additionalData);
+    uint256 balanceIncrease = getTokenBalance(scaledBalance, index) - previousBalance;
 
     _userState[user].additionalData = index.toUint128();
 
     _burn(user, amountScaled.toUint120());
 
-    if (balanceIncrease > amount) {
-      uint256 amountToMint = balanceIncrease - amount;
+    if (nextBalance > previousBalance) {
+      uint256 amountToMint = nextBalance - previousBalance;
       emit Transfer(address(0), user, amountToMint);
       emit Mint(user, user, amountToMint, balanceIncrease, index);
     } else {
-      uint256 amountToBurn = amount - balanceIncrease;
+      uint256 amountToBurn = previousBalance - nextBalance;
       emit Transfer(user, address(0), amountToBurn);
       emit Burn(user, target, amountToBurn, balanceIncrease, index);
     }
+
     return scaledBalance - amountScaled == 0;
   }
 }
diff --git a/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/TokenMath.sol b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/TokenMath.sol
new file mode 100644
index 0000000..f7d63fc
--- /dev/null
+++ b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/TokenMath.sol
@@ -0,0 +1,93 @@
+// SPDX-License-Identifier: MIT
+pragma solidity ^0.8.0;
+
+import {WadRayMath} from "../../libraries/math/WadRayMath.sol";
+
+/**
+ * @title TokenMath
+ * @author BGD Labs
+ * @notice Provides utility functions for calculating scaled amounts and balances for aTokens and vTokens,
+ *         applying specific rounding rules (floor/ceil) as per Aave v3.5's rounding improvements.
+ *         The rounding behavior of the operations is in line with the ERC-4626 token standard.
+ *         In practice, this means rounding in favor of the protocol.
+ */
+library TokenMath {
+  using WadRayMath for uint256;
+
+  /**
+   * @notice Calculates the scaled amount of aTokens to mint when supplying underlying assets.
+   *         The amount is rounded down to ensure the minted aTokens are less than or equal to the supplied amount.
+   * @param amount The amount of underlying asset supplied.
+   * @param liquidityIndex The current aToken liquidityIndex.
+   * @return The scaled amount of aTokens to mint.
+   */
+  function getATokenMintScaledAmount(uint256 amount, uint256 liquidityIndex) internal pure returns (uint256) {
+    return amount.rayDivFloor(liquidityIndex);
+  }
+
+  /**
+   * @notice Calculates the scaled amount of aTokens to burn when withdrawing underlying assets.
+   *         The scaled amount is rounded up to ensure the user's aToken balance is sufficiently reduced.
+   * @param amount The amount of underlying asset to withdraw.
+   * @param liquidityIndex The current aToken liquidityIndex.
+   * @return The scaled amount of aTokens to burn.
+   */
+  function getATokenBurnScaledAmount(uint256 amount, uint256 liquidityIndex) internal pure returns (uint256) {
+    return amount.rayDivCeil(liquidityIndex);
+  }
+
+  /**
+   * @notice Calculates the scaled amount of aTokens to transfer.
+   *         The scaled amount is rounded up to ensure the recipient receives at least the requested amount.
+   * @param amount The amount of aTokens to transfer.
+   * @param liquidityIndex The current aToken liquidityIndex.
+   * @return The scaled amount of aTokens for transfer.
+   */
+  function getATokenTransferScaledAmount(uint256 amount, uint256 liquidityIndex) internal pure returns (uint256) {
+    return amount.rayDivCeil(liquidityIndex);
+  }
+
+  /**
+   * @notice Calculates the actual aToken balance from a scaled balance and the current liquidityIndex.
+   *         The balance is rounded down to prevent overaccounting.
+   * @param scaledAmount The scaled aToken balance.
+   * @param liquidityIndex The current aToken liquidityIndex.
+   * @return The actual aToken balance.
+   */
+  function getATokenBalance(uint256 scaledAmount, uint256 liquidityIndex) internal pure returns (uint256) {
+    return scaledAmount.rayMulFloor(liquidityIndex);
+  }
+
+  /**
+   * @notice Calculates the scaled amount of vTokens to mint when borrowing.
+   *         The amount is rounded up to ensure the protocol never underaccounts the user's debt.
+   * @param amount The amount of underlying asset borrowed.
+   * @param variableBorrowIndex The current vToken variableBorrowIndex.
+   * @return The scaled amount of vTokens to mint.
+   */
+  function getVTokenMintScaledAmount(uint256 amount, uint256 variableBorrowIndex) internal pure returns (uint256) {
+    return amount.rayDivCeil(variableBorrowIndex);
+  }
+
+  /**
+   * @notice Calculates the scaled amount of vTokens to burn.
+   *         The scaled amount is rounded down to prevent over-burning of vTokens.
+   * @param amount The amount of underlying asset corresponding to the vTokens to burn.
+   * @param variableBorrowIndex The current vToken variableBorrowIndex.
+   * @return The scaled amount of vTokens to burn.
+   */
+  function getVTokenBurnScaledAmount(uint256 amount, uint256 variableBorrowIndex) internal pure returns (uint256) {
+    return amount.rayDivFloor(variableBorrowIndex);
+  }
+
+  /**
+   * @notice Calculates the actual vToken balance (debt) from a scaled balance and the current variableBorrowIndex.
+   *         The balance is rounded up to prevent underaccounting the user's debt.
+   * @param scaledAmount The scaled vToken balance.
+   * @param variableBorrowIndex The current vToken variableBorrowIndex.
+   * @return The actual vToken balance (debt).
+   */
+  function getVTokenBalance(uint256 scaledAmount, uint256 variableBorrowIndex) internal pure returns (uint256) {
+    return scaledAmount.rayMulCeil(variableBorrowIndex);
+  }
+}
diff --git a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/WadRayMath.sol b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/WadRayMath.sol
index 433dd94..88e3b00 100644
--- a/tmp/1_0xAAc28Fd01425ac85d5f8A473bbe311dbaD335E06_flat/WadRayMath.sol
+++ b/tmp/1_0xB76cf0f1d2e1a606c14044607c8c44878AAE7186_flat/WadRayMath.sol
@@ -6,10 +6,16 @@ pragma solidity ^0.8.0;
  * @author Aave
  * @notice Provides functions to perform calculations with Wad and Ray units
  * @dev Provides mul and div function for wads (decimal numbers with 18 digits of precision) and rays (decimal numbers
- * with 27 digits of precision)
- * @dev Operations are rounded. If a value is >=.5, will be rounded up, otherwise rounded down.
+ * with 27 digits of precision).
+ * @dev Default operations round half up (if a value is >= .5, it will be rounded up, otherwise rounded down).
+ * @dev For specific rounding behaviors, functions with `Floor` and `Ceil` suffixes or a `Rounding` parameter are available.
  */
 library WadRayMath {
+  enum Rounding {
+    Floor,
+    Ceil
+  }
+
   // HALF_WAD and HALF_RAY expressed with extended notation as constant with operations are not supported in Yul assembly
   uint256 internal constant WAD = 1e18;
   uint256 internal constant HALF_WAD = 0.5e18;
@@ -51,22 +57,38 @@ library WadRayMath {
     }
   }
 
-  /**
-   * @notice Multiplies two ray, rounding half up to the nearest ray
-   * @dev assembly optimized for improved gas savings, see https://twitter.com/transmissions11/status/1451131036377571328
-   * @param a Ray
-   * @param b Ray
-   * @return c = a raymul b
-   */
   function rayMul(uint256 a, uint256 b) internal pure returns (uint256 c) {
-    // to avoid overflow, a <= (type(uint256).max - HALF_RAY) / b
     assembly {
+      // to avoid overflow, a <= (type(uint256).max - HALF_RAY) / b
       if iszero(or(iszero(b), iszero(gt(a, div(sub(not(0), HALF_RAY), b))))) { revert(0, 0) }
-
       c := div(add(mul(a, b), HALF_RAY), RAY)
     }
   }
 
+  function rayMul(uint256 a, uint256 b, Rounding rounding) internal pure returns (uint256 c) {
+    if (rounding == Rounding.Floor) return rayMulFloor(a, b);
+    return rayMulCeil(a, b);
+  }
+
+  function rayMulFloor(uint256 a, uint256 b) internal pure returns (uint256 c) {
+    assembly {
+      // Overflow check: Ensure a * b does not exceed uint256 max
+      if iszero(or(iszero(b), iszero(gt(a, div(not(0), b))))) { revert(0, 0) }
+
+      c := div(mul(a, b), RAY)
+    }
+  }
+
+  function rayMulCeil(uint256 a, uint256 b) internal pure returns (uint256 c) {
+    assembly {
+      // Overflow check: Ensure a * b does not exceed uint256 max
+      if iszero(or(iszero(b), iszero(gt(a, div(not(0), b))))) { revert(0, 0) }
+
+      let product := mul(a, b)
+      c := add(div(product, RAY), iszero(iszero(mod(product, RAY))))
+    }
+  }
+
   /**
    * @notice Divides two ray, rounding half up to the nearest ray
    * @dev assembly optimized for improved gas savings, see https://twitter.com/transmissions11/status/1451131036377571328
@@ -75,14 +97,35 @@ library WadRayMath {
    * @return c = a raydiv b
    */
   function rayDiv(uint256 a, uint256 b) internal pure returns (uint256 c) {
-    // to avoid overflow, a <= (type(uint256).max - halfB) / RAY
     assembly {
+      // to avoid overflow, a <= (type(uint256).max - b / 2) / RAY
       if or(iszero(b), iszero(iszero(gt(a, div(sub(not(0), div(b, 2)), RAY))))) { revert(0, 0) }
-
       c := div(add(mul(a, RAY), div(b, 2)), b)
     }
   }
 
+  function rayDiv(uint256 a, uint256 b, Rounding rounding) internal pure returns (uint256 c) {
+    if (rounding == Rounding.Floor) return rayDivFloor(a, b);
+    return rayDivCeil(a, b);
+  }
+
+  function rayDivCeil(uint256 a, uint256 b) internal pure returns (uint256 c) {
+    assembly {
+      // Overflow check: Ensure a * RAY does not exceed uint256 max
+      if or(iszero(b), iszero(iszero(gt(a, div(not(0), RAY))))) { revert(0, 0) }
+      let scaled := mul(a, RAY)
+      c := add(div(scaled, b), iszero(iszero(mod(scaled, b))))
+    }
+  }
+
+  function rayDivFloor(uint256 a, uint256 b) internal pure returns (uint256 c) {
+    assembly {
+      // Overflow check: Ensure a * RAY does not exceed uint256 max
+      if or(iszero(b), iszero(iszero(gt(a, div(not(0), RAY))))) { revert(0, 0) }
+      c := div(mul(a, RAY), b)
+    }
+  }
+
   /**
    * @dev Casts ray down to wad
    * @dev assembly optimized for improved gas savings, see https://twitter.com/transmissions11/status/1451131036377571328
