===================================================================
--- src/contracts/instances/ATokenInstance.sol
+++ lib/aave-v3-origin-private/src/contracts/instances/ATokenInstance.sol
@@ -1,13 +1,29 @@
 // SPDX-License-Identifier: BUSL-1.1
 pragma solidity ^0.8.0;
 
-import {AToken, IPool, IAaveIncentivesController, IInitializableAToken, Errors, VersionedInitializable} from "../protocol/tokenization/AToken.sol";
+import {IPool} from "../interfaces/IPool.sol";
+import {IInitializableAToken} from "../interfaces/IInitializableAToken.sol";
 
+import {Errors} from "../protocol/libraries/helpers/Errors.sol";
+
+import {VersionedInitializable} from "../misc/aave-upgradeability/VersionedInitializable.sol";
+
+import {AToken} from "../protocol/tokenization/AToken.sol";
+
+/**
+ * @title Aave ERC20 AToken Instance
+ * @author BGD Labs
+ * @notice Instance of the interest bearing token for the Aave protocol
+ */
 contract ATokenInstance is AToken {
-    uint256 public constant ATOKEN_REVISION = 1;
+    uint256 public constant ATOKEN_REVISION = 3;
 
-    constructor(IPool pool) AToken(pool) {}
+    constructor(
+        IPool pool,
+        address rewardsController,
+        address treasury
+    ) AToken(pool, rewardsController, treasury) {}
 
     /// @inheritdoc VersionedInitializable
     function getRevision() internal pure virtual override returns (uint256) {
         return ATOKEN_REVISION;
@@ -15,32 +31,28 @@
 
     /// @inheritdoc IInitializableAToken
     function initialize(
         IPool initializingPool,
-        address treasury,
         address underlyingAsset,
-        IAaveIncentivesController incentivesController,
         uint8 aTokenDecimals,
         string calldata aTokenName,
         string calldata aTokenSymbol,
         bytes calldata params
     ) public virtual override initializer {
-        require(initializingPool == POOL, Errors.POOL_ADDRESSES_DO_NOT_MATCH);
+        require(initializingPool == POOL, Errors.PoolAddressesDoNotMatch());
         _setName(aTokenName);
         _setSymbol(aTokenSymbol);
         _setDecimals(aTokenDecimals);
 
-        _treasury = treasury;
         _underlyingAsset = underlyingAsset;
-        _incentivesController = incentivesController;
 
         _domainSeparator = _calculateDomainSeparator();
 
         emit Initialized(
             underlyingAsset,
             address(POOL),
-            treasury,
-            address(incentivesController),
+            address(TREASURY),
+            address(REWARDS_CONTROLLER),
             aTokenDecimals,
             aTokenName,
             aTokenSymbol,
             params
