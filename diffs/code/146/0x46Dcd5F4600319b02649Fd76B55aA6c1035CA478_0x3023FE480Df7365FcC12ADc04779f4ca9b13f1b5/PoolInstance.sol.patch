===================================================================
--- src/contracts/instances/PoolInstance.sol
+++ lib/aave-v3-origin-private/src/contracts/instances/PoolInstance.sol
@@ -2,14 +2,23 @@
 pragma solidity ^0.8.0;
 
 import {Pool} from "../protocol/pool/Pool.sol";
 import {IPoolAddressesProvider} from "../interfaces/IPoolAddressesProvider.sol";
+import {IReserveInterestRateStrategy} from "../interfaces/IReserveInterestRateStrategy.sol";
 import {Errors} from "../protocol/libraries/helpers/Errors.sol";
 
+/**
+ * @title Aave Pool Instance
+ * @author BGD Labs
+ * @notice Instance of the Pool for the Aave protocol
+ */
 contract PoolInstance is Pool {
-    uint256 public constant POOL_REVISION = 7;
+    uint256 public constant POOL_REVISION = 8;
 
-    constructor(IPoolAddressesProvider provider) Pool(provider) {}
+    constructor(
+        IPoolAddressesProvider provider,
+        IReserveInterestRateStrategy interestRateStrategy_
+    ) Pool(provider, interestRateStrategy_) {}
 
     /**
      * @notice Initializes the Pool.
      * @dev Function is invoked by the proxy contract when the Pool contract is added to the
@@ -21,9 +30,9 @@
         IPoolAddressesProvider provider
     ) external virtual override initializer {
         require(
             provider == ADDRESSES_PROVIDER,
-            Errors.INVALID_ADDRESSES_PROVIDER
+            Errors.InvalidAddressesProvider()
         );
     }
 
     function getRevision() internal pure virtual override returns (uint256) {
