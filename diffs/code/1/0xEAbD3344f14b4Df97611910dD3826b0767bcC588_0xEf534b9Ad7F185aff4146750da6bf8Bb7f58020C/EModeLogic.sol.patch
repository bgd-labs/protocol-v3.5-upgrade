===================================================================
--- lib/aave-v3-origin-private/src/contracts/protocol/libraries/logic/EModeLogic.sol
+++ lib/aave-v3-origin/src/contracts/protocol/libraries/logic/EModeLogic.sol
@@ -1,30 +1,17 @@
 // SPDX-License-Identifier: BUSL-1.1
 pragma solidity ^0.8.10;
 
-import {GPv2SafeERC20} from "../../../dependencies/gnosis/contracts/GPv2SafeERC20.sol";
-import {IERC20} from "../../../dependencies/openzeppelin/contracts/IERC20.sol";
 import {IPool} from "../../../interfaces/IPool.sol";
-import {UserConfiguration} from "../configuration/UserConfiguration.sol";
-import {WadRayMath} from "../math/WadRayMath.sol";
-import {PercentageMath} from "../math/PercentageMath.sol";
 import {DataTypes} from "../types/DataTypes.sol";
 import {ValidationLogic} from "./ValidationLogic.sol";
-import {ReserveLogic} from "./ReserveLogic.sol";
 
 /**
  * @title EModeLogic library
  * @author Aave
  * @notice Implements the base logic for all the actions related to the eMode
  */
 library EModeLogic {
-    using ReserveLogic for DataTypes.ReserveCache;
-    using ReserveLogic for DataTypes.ReserveData;
-    using GPv2SafeERC20 for IERC20;
-    using UserConfiguration for DataTypes.UserConfigurationMap;
-    using WadRayMath for uint256;
-    using PercentageMath for uint256;
-
     /**
      * @notice Updates the user efficiency mode category
      * @dev Will revert if user is borrowing non-compatible asset or change will drop HF < HEALTH_FACTOR_LIQUIDATION_THRESHOLD
      * @dev Emits the `UserEModeSet` event
