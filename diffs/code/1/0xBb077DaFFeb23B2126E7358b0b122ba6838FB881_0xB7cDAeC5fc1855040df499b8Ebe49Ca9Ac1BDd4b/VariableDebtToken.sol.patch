===================================================================
--- src/core/contracts/protocol/tokenization/VariableDebtToken.sol
+++ lib/aave-v3-origin-private/src/contracts/protocol/tokenization/VariableDebtToken.sol
@@ -1,14 +1,12 @@
 // SPDX-License-Identifier: BUSL-1.1
 pragma solidity ^0.8.10;
 
 import {IERC20} from "../../dependencies/openzeppelin/contracts/IERC20.sol";
-import {SafeCast} from "../../dependencies/openzeppelin/contracts/SafeCast.sol";
-import {VersionedInitializable} from "../libraries/aave-upgradeability/VersionedInitializable.sol";
+import {SafeCast} from "openzeppelin-contracts/contracts/utils/math/SafeCast.sol";
 import {WadRayMath} from "../libraries/math/WadRayMath.sol";
 import {Errors} from "../libraries/helpers/Errors.sol";
 import {IPool} from "../../interfaces/IPool.sol";
-import {IAaveIncentivesController} from "../../interfaces/IAaveIncentivesController.sol";
 import {IInitializableDebtToken} from "../../interfaces/IInitializableDebtToken.sol";
 import {IVariableDebtToken} from "../../interfaces/IVariableDebtToken.sol";
 import {EIP712Base} from "./base/EIP712Base.sol";
 import {DebtTokenBase} from "./base/DebtTokenBase.sol";
@@ -31,18 +29,21 @@
 
     /**
      * @dev Constructor.
      * @param pool The address of the Pool contract
+     * @param rewardsController The address of the rewards controller contract
      */
     constructor(
-        IPool pool
+        IPool pool,
+        address rewardsController
     )
         DebtTokenBase()
         ScaledBalanceTokenBase(
             pool,
             "VARIABLE_DEBT_TOKEN_IMPL",
             "VARIABLE_DEBT_TOKEN_IMPL",
-            0
+            0,
+            rewardsController
         )
     {
         // Intentionally left blank
     }
@@ -50,9 +51,8 @@
     /// @inheritdoc IInitializableDebtToken
     function initialize(
         IPool initializingPool,
         address underlyingAsset,
-        IAaveIncentivesController incentivesController,
         uint8 debtTokenDecimals,
         string memory debtTokenName,
         string memory debtTokenSymbol,
         bytes calldata params
@@ -79,26 +79,26 @@
         address user,
         address onBehalfOf,
         uint256 amount,
         uint256 index
-    ) external virtual override onlyPool returns (bool, uint256) {
+    ) external virtual override onlyPool returns (uint256) {
         if (user != onBehalfOf) {
             _decreaseBorrowAllowance(onBehalfOf, user, amount);
         }
-        return (
-            _mintScaled(user, onBehalfOf, amount, index),
-            scaledTotalSupply()
-        );
+        _mintScaled(user, onBehalfOf, amount, index);
+        return scaledTotalSupply();
     }
 
     /// @inheritdoc IVariableDebtToken
     function burn(
         address from,
         uint256 amount,
         uint256 index
-    ) external virtual override onlyPool returns (uint256) {
-        _burnScaled(from, address(0), amount, index);
-        return scaledTotalSupply();
+    ) external virtual override onlyPool returns (bool, uint256) {
+        return (
+            _burnScaled(from, address(0), amount, index),
+            scaledTotalSupply()
+        );
     }
 
     /// @inheritdoc IERC20
     function totalSupply() public view virtual override returns (uint256) {
@@ -120,45 +120,45 @@
     function transfer(
         address,
         uint256
     ) external virtual override returns (bool) {
-        revert(Errors.OPERATION_NOT_SUPPORTED);
+        revert Errors.OperationNotSupported();
     }
 
     function allowance(
         address,
         address
     ) external view virtual override returns (uint256) {
-        revert(Errors.OPERATION_NOT_SUPPORTED);
+        revert Errors.OperationNotSupported();
     }
 
     function approve(
         address,
         uint256
     ) external virtual override returns (bool) {
-        revert(Errors.OPERATION_NOT_SUPPORTED);
+        revert Errors.OperationNotSupported();
     }
 
     function transferFrom(
         address,
         address,
         uint256
     ) external virtual override returns (bool) {
-        revert(Errors.OPERATION_NOT_SUPPORTED);
+        revert Errors.OperationNotSupported();
     }
 
     function increaseAllowance(
         address,
         uint256
     ) external virtual override returns (bool) {
-        revert(Errors.OPERATION_NOT_SUPPORTED);
+        revert Errors.OperationNotSupported();
     }
 
     function decreaseAllowance(
         address,
         uint256
     ) external virtual override returns (bool) {
-        revert(Errors.OPERATION_NOT_SUPPORTED);
+        revert Errors.OperationNotSupported();
     }
 
     /// @inheritdoc IVariableDebtToken
     function UNDERLYING_ASSET_ADDRESS()
