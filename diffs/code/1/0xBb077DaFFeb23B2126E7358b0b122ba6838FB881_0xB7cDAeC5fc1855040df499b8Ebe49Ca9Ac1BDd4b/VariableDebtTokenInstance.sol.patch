===================================================================
--- src/core/instances/VariableDebtTokenInstance.sol
+++ lib/aave-v3-origin-private/src/contracts/instances/VariableDebtTokenInstance.sol
@@ -1,13 +1,22 @@
-// SPDX-License-Identifier: MIT
+// SPDX-License-Identifier: BUSL-1.1
 pragma solidity ^0.8.0;
 
-import {VariableDebtToken, IPool, IInitializableDebtToken, VersionedInitializable, IAaveIncentivesController, Errors} from "../contracts/protocol/tokenization/VariableDebtToken.sol";
+import {VersionedInitializable} from "../misc/aave-upgradeability/VersionedInitializable.sol";
+import {VariableDebtToken, IPool, IInitializableDebtToken, Errors} from "../protocol/tokenization/VariableDebtToken.sol";
 
+/**
+ * @title Aave ERC20 VariableDebtToken Instance
+ * @author BGD Labs
+ * @notice Instance of the variable debt token for the Aave protocol
+ */
 contract VariableDebtTokenInstance is VariableDebtToken {
-    uint256 public constant DEBT_TOKEN_REVISION = 1;
+    uint256 public constant DEBT_TOKEN_REVISION = 3;
 
-    constructor(IPool pool) VariableDebtToken(pool) {}
+    constructor(
+        IPool pool,
+        address rewardsController
+    ) VariableDebtToken(pool, rewardsController) {}
 
     /// @inheritdoc VersionedInitializable
     function getRevision() internal pure virtual override returns (uint256) {
         return DEBT_TOKEN_REVISION;
@@ -16,28 +25,26 @@
     /// @inheritdoc IInitializableDebtToken
     function initialize(
         IPool initializingPool,
         address underlyingAsset,
-        IAaveIncentivesController incentivesController,
         uint8 debtTokenDecimals,
         string memory debtTokenName,
         string memory debtTokenSymbol,
         bytes calldata params
     ) external override initializer {
-        require(initializingPool == POOL, Errors.POOL_ADDRESSES_DO_NOT_MATCH);
+        require(initializingPool == POOL, Errors.PoolAddressesDoNotMatch());
         _setName(debtTokenName);
         _setSymbol(debtTokenSymbol);
         _setDecimals(debtTokenDecimals);
 
         _underlyingAsset = underlyingAsset;
-        _incentivesController = incentivesController;
 
         _domainSeparator = _calculateDomainSeparator();
 
         emit Initialized(
             underlyingAsset,
             address(POOL),
-            address(incentivesController),
+            address(REWARDS_CONTROLLER),
             debtTokenDecimals,
             debtTokenName,
             debtTokenSymbol,
             params
